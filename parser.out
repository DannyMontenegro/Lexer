Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD
    COMILLASDOBLES
    COMILLASSIMPLES
    CORCHETEABRE
    CORCHETECIERRA
    FINAL
    FLECHA
    IN
    LIST
    NEW
    NOT
    PRINT
    RUTA
    SET
    SUPER
    THIS

Grammar

Rule 0     S' -> bloque
Rule 1     bloque -> expresion
Rule 2     bloque -> bloque expresion
Rule 3     bloque -> empty
Rule 4     bloque -> estructuras
Rule 5     bloque -> bloque estructuras
Rule 6     funcion -> tipoDato VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque RETURN valores PUNTOCOMA LLAVECIERRA
Rule 7     funcion -> VOID VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque LLAVECIERRA
Rule 8     funcion -> VOID VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque RETURN PUNTOCOMA LLAVECIERRA
Rule 9     parametros -> tipoDato VARIABLE
Rule 10    parametros -> REQUIRED tipoDato VARIABLE
Rule 11    parametros -> parametros COMA tipoDato VARIABLE
Rule 12    parametros -> empty
Rule 13    expresion -> mapa PUNTOCOMA
Rule 14    expresion -> mapaFunciones PUNTOCOMA
Rule 15    expresion -> asignacion PUNTOCOMA
Rule 16    expresion -> import
Rule 17    expresion -> export
Rule 18    import -> IMPORT CADENA PUNTOCOMA
Rule 19    export -> EXPORT CADENA PUNTOCOMA
Rule 20    asignacion -> VARIABLE operadores_asignacion valores
Rule 21    asignacion -> tipoDato VARIABLE IGUAL valores
Rule 22    asignacion -> BOOL VARIABLE IGUAL comparacion
Rule 23    asignacion -> tipoDato VARIABLE IGUAL operacion_aritmetica
Rule 24    asignacion -> empty
Rule 25    operacion_aritmetica -> valores operadores_aritmeticos valores
Rule 26    operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos valores
Rule 27    operadores_aritmeticos -> SUMA
Rule 28    operadores_aritmeticos -> RESTA
Rule 29    operadores_aritmeticos -> MULTIPLICACION
Rule 30    operadores_aritmeticos -> DIVISION
Rule 31    operadores_aritmeticos -> DIVENTERA
Rule 32    operadores_aritmeticos -> RESIDUO
Rule 33    operadores_asignacion -> IGUAL
Rule 34    operadores_asignacion -> ASIGNACIONAUMENTADA
Rule 35    operadores_asignacion -> ASIGNACIONDISMINUIDA
Rule 36    comparacion -> valores comparador valores
Rule 37    comparacion -> comparacion comparador valores
Rule 38    comparacion -> valores IS tipoDato
Rule 39    comparador -> MENORQUE
Rule 40    comparador -> MAYORQUE
Rule 41    comparador -> IGUALQUE
Rule 42    comparador -> DIFERENTEQUE
Rule 43    mapa -> MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
Rule 44    mapa -> mapaFunciones
Rule 45    mapaFunciones -> mapa PUNTO VARIABLE LPAREN RPAREN
Rule 46    mapaFunciones -> mapa PUNTO VARIABLE LPAREN valores
Rule 47    mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN RPAREN
Rule 48    mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN valores RPAREN
Rule 49    creacionMapa -> LLAVEABRE paresClaveValor LLAVECIERRA
Rule 50    creacionMapa -> VARIABLE
Rule 51    paresClaveValor -> valores DOSPUNTOS valores
Rule 52    paresClaveValor -> paresClaveValor COMA valores DOSPUNTOS valores
Rule 53    valores -> VARIABLE
Rule 54    valores -> NUMERO
Rule 55    valores -> CADENA
Rule 56    valores -> booleano
Rule 57    booleano -> TRUE
Rule 58    booleano -> FALSE
Rule 59    tipoDato -> STRING
Rule 60    tipoDato -> INT
Rule 61    tipoDato -> BOOL
Rule 62    tipoDato -> DOUBLE
Rule 63    tipoDato -> DYNAMIC
Rule 64    tipoDato -> VAR
Rule 65    tipoDato -> nulValue
Rule 66    estructuras -> estructuraIf
Rule 67    estructuras -> estructuraWhile
Rule 68    estructuras -> estructuraFor
Rule 69    estructuras -> doWhile
Rule 70    estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
Rule 71    estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
Rule 72    estructuraIf -> estructuraIfElse
Rule 73    estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA
Rule 74    estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA
Rule 75    estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
Rule 76    estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
Rule 77    asignacionVacio -> asignacion
Rule 78    asignacionVacio -> empty
Rule 79    comparacionVacio -> comparacion
Rule 80    comparacionVacio -> booleano
Rule 81    comparacionVacio -> empty
Rule 82    aumento -> VARIABLE IGUAL operacion_aritmetica
Rule 83    aumento -> VARIABLE operadores_asignacion NUMERO
Rule 84    aumento -> VARIABLE operadores_asignacion VARIABLE
Rule 85    aumento -> empty
Rule 86    argumentoEstructura -> VARIABLE
Rule 87    argumentoEstructura -> booleano
Rule 88    argumentoEstructura -> comparacion
Rule 89    empty -> <empty>
Rule 90    nulValue -> NULL
Rule 91    doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN

Terminals, with rules where they appear

ADD                  : 
ASIGNACIONAUMENTADA  : 34
ASIGNACIONDISMINUIDA : 35
BOOL                 : 22 61
CADENA               : 18 19 55
COMA                 : 11 43 52
COMILLASDOBLES       : 
COMILLASSIMPLES      : 
CORCHETEABRE         : 
CORCHETECIERRA       : 
DIFERENTEQUE         : 42
DIVENTERA            : 31
DIVISION             : 30
DO                   : 91
DOSPUNTOS            : 51 52
DOUBLE               : 62
DYNAMIC              : 63
ELSE                 : 73 74
EXPORT               : 19
FALSE                : 58
FINAL                : 
FLECHA               : 
FOR                  : 76
IF                   : 70 71
IGUAL                : 21 22 23 33 43 82
IGUALQUE             : 41
IMPORT               : 18
IN                   : 
INT                  : 60
IS                   : 38
LIST                 : 
LLAVEABRE            : 6 7 8 49 70 71 73 74 75 76 91
LLAVECIERRA          : 6 7 8 49 70 71 73 74 75 76 91
LPAREN               : 6 7 8 45 46 47 48 70 71 75 76 91
MAP                  : 43
MAYORQUE             : 40 43
MENORQUE             : 39 43
MULTIPLICACION       : 29
NEW                  : 
NOT                  : 
NULL                 : 90
NUMERO               : 54 83
PRINT                : 
PUNTO                : 45 46 47 48
PUNTOCOMA            : 6 8 13 14 15 18 19 76 76
REQUIRED             : 10
RESIDUO              : 32
RESTA                : 28
RETURN               : 6 8
RPAREN               : 6 7 8 45 47 48 70 71 75 76 91
RUTA                 : 
SET                  : 
STRING               : 59
SUMA                 : 27
SUPER                : 
THIS                 : 
TRUE                 : 57
VAR                  : 64
VARIABLE             : 6 7 8 9 10 11 20 21 22 23 43 45 46 47 47 48 48 50 53 82 83 84 84 86
VOID                 : 7 8
WHILE                : 75 91
error                : 

Nonterminals, with rules where they appear

argumentoEstructura  : 70 71 75 91
asignacion           : 15 77
asignacionVacio      : 76
aumento              : 76
bloque               : 2 5 6 7 8 70 73 75 76 91 0
booleano             : 56 80 87
comparacion          : 22 37 79 88
comparacionVacio     : 76
comparador           : 36 37
creacionMapa         : 43
doWhile              : 69
empty                : 3 12 24 78 81 85
estructuraFor        : 68
estructuraIf         : 66 71 73 74 74
estructuraIfElse     : 72
estructuraWhile      : 67
estructuras          : 4 5
export               : 17
expresion            : 1 2
funcion              : 
import               : 16
mapa                 : 13 45 46
mapaFunciones        : 14 44
nulValue             : 65
operacion_aritmetica : 23 26 82
operadores_aritmeticos : 25 26
operadores_asignacion : 20 83 84
parametros           : 6 7 8 11
paresClaveValor      : 49 52
tipoDato             : 6 9 10 11 21 23 38 43 43
valores              : 6 20 21 25 25 26 36 36 37 38 46 48 51 51 52 52

Parsing method: LALR

state 0

    (0) S' -> . bloque
    (1) bloque -> . expresion
    (2) bloque -> . bloque expresion
    (3) bloque -> . empty
    (4) bloque -> . estructuras
    (5) bloque -> . bloque estructuras
    (13) expresion -> . mapa PUNTOCOMA
    (14) expresion -> . mapaFunciones PUNTOCOMA
    (15) expresion -> . asignacion PUNTOCOMA
    (16) expresion -> . import
    (17) expresion -> . export
    (89) empty -> .
    (66) estructuras -> . estructuraIf
    (67) estructuras -> . estructuraWhile
    (68) estructuras -> . estructuraFor
    (69) estructuras -> . doWhile
    (43) mapa -> . MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (44) mapa -> . mapaFunciones
    (45) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN valores
    (47) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN valores RPAREN
    (20) asignacion -> . VARIABLE operadores_asignacion valores
    (21) asignacion -> . tipoDato VARIABLE IGUAL valores
    (22) asignacion -> . BOOL VARIABLE IGUAL comparacion
    (23) asignacion -> . tipoDato VARIABLE IGUAL operacion_aritmetica
    (24) asignacion -> . empty
    (18) import -> . IMPORT CADENA PUNTOCOMA
    (19) export -> . EXPORT CADENA PUNTOCOMA
    (70) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
    (72) estructuraIf -> . estructuraIfElse
    (75) estructuraWhile -> . WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (76) estructuraFor -> . FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (91) doWhile -> . DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (73) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA
    (90) nulValue -> . NULL

  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for EXPORT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    $end            reduce using rule 89 (empty -> .)
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    MAP             shift and go to state 14
    VARIABLE        shift and go to state 16
    BOOL            shift and go to state 17
    IMPORT          shift and go to state 18
    EXPORT          shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    DO              shift and go to state 24
    STRING          shift and go to state 25
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    NULL            shift and go to state 31

  ! MAP             [ reduce using rule 89 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 89 (empty -> .) ]
  ! BOOL            [ reduce using rule 89 (empty -> .) ]
  ! IMPORT          [ reduce using rule 89 (empty -> .) ]
  ! EXPORT          [ reduce using rule 89 (empty -> .) ]
  ! IF              [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]
  ! FOR             [ reduce using rule 89 (empty -> .) ]
  ! DO              [ reduce using rule 89 (empty -> .) ]
  ! STRING          [ reduce using rule 89 (empty -> .) ]
  ! INT             [ reduce using rule 89 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 89 (empty -> .) ]
  ! DYNAMIC         [ reduce using rule 89 (empty -> .) ]
  ! VAR             [ reduce using rule 89 (empty -> .) ]
  ! NULL            [ reduce using rule 89 (empty -> .) ]

    bloque                         shift and go to state 1
    expresion                      shift and go to state 2
    empty                          shift and go to state 3
    estructuras                    shift and go to state 4
    mapa                           shift and go to state 5
    mapaFunciones                  shift and go to state 6
    asignacion                     shift and go to state 7
    import                         shift and go to state 8
    export                         shift and go to state 9
    estructuraIf                   shift and go to state 10
    estructuraWhile                shift and go to state 11
    estructuraFor                  shift and go to state 12
    doWhile                        shift and go to state 13
    tipoDato                       shift and go to state 15
    estructuraIfElse               shift and go to state 21
    nulValue                       shift and go to state 30

state 1

    (0) S' -> bloque .
    (2) bloque -> bloque . expresion
    (5) bloque -> bloque . estructuras
    (13) expresion -> . mapa PUNTOCOMA
    (14) expresion -> . mapaFunciones PUNTOCOMA
    (15) expresion -> . asignacion PUNTOCOMA
    (16) expresion -> . import
    (17) expresion -> . export
    (66) estructuras -> . estructuraIf
    (67) estructuras -> . estructuraWhile
    (68) estructuras -> . estructuraFor
    (69) estructuras -> . doWhile
    (43) mapa -> . MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (44) mapa -> . mapaFunciones
    (45) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN valores
    (47) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN valores RPAREN
    (20) asignacion -> . VARIABLE operadores_asignacion valores
    (21) asignacion -> . tipoDato VARIABLE IGUAL valores
    (22) asignacion -> . BOOL VARIABLE IGUAL comparacion
    (23) asignacion -> . tipoDato VARIABLE IGUAL operacion_aritmetica
    (24) asignacion -> . empty
    (18) import -> . IMPORT CADENA PUNTOCOMA
    (19) export -> . EXPORT CADENA PUNTOCOMA
    (70) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
    (72) estructuraIf -> . estructuraIfElse
    (75) estructuraWhile -> . WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (76) estructuraFor -> . FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (91) doWhile -> . DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (89) empty -> .
    (73) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA
    (90) nulValue -> . NULL

    MAP             shift and go to state 14
    VARIABLE        shift and go to state 16
    BOOL            shift and go to state 17
    IMPORT          shift and go to state 18
    EXPORT          shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    DO              shift and go to state 24
    STRING          shift and go to state 25
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    NULL            shift and go to state 31

    expresion                      shift and go to state 32
    estructuras                    shift and go to state 33
    mapa                           shift and go to state 5
    mapaFunciones                  shift and go to state 6
    asignacion                     shift and go to state 7
    import                         shift and go to state 8
    export                         shift and go to state 9
    estructuraIf                   shift and go to state 10
    estructuraWhile                shift and go to state 11
    estructuraFor                  shift and go to state 12
    doWhile                        shift and go to state 13
    tipoDato                       shift and go to state 15
    empty                          shift and go to state 34
    estructuraIfElse               shift and go to state 21
    nulValue                       shift and go to state 30

state 2

    (1) bloque -> expresion .

    MAP             reduce using rule 1 (bloque -> expresion .)
    VARIABLE        reduce using rule 1 (bloque -> expresion .)
    BOOL            reduce using rule 1 (bloque -> expresion .)
    IMPORT          reduce using rule 1 (bloque -> expresion .)
    EXPORT          reduce using rule 1 (bloque -> expresion .)
    IF              reduce using rule 1 (bloque -> expresion .)
    WHILE           reduce using rule 1 (bloque -> expresion .)
    FOR             reduce using rule 1 (bloque -> expresion .)
    DO              reduce using rule 1 (bloque -> expresion .)
    STRING          reduce using rule 1 (bloque -> expresion .)
    INT             reduce using rule 1 (bloque -> expresion .)
    DOUBLE          reduce using rule 1 (bloque -> expresion .)
    DYNAMIC         reduce using rule 1 (bloque -> expresion .)
    VAR             reduce using rule 1 (bloque -> expresion .)
    NULL            reduce using rule 1 (bloque -> expresion .)
    $end            reduce using rule 1 (bloque -> expresion .)
    PUNTOCOMA       reduce using rule 1 (bloque -> expresion .)
    LLAVECIERRA     reduce using rule 1 (bloque -> expresion .)


state 3

    (3) bloque -> empty .
    (24) asignacion -> empty .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 3 (bloque -> empty .)
    MAP             reduce using rule 3 (bloque -> empty .)
    VARIABLE        reduce using rule 3 (bloque -> empty .)
    BOOL            reduce using rule 3 (bloque -> empty .)
    IMPORT          reduce using rule 3 (bloque -> empty .)
    EXPORT          reduce using rule 3 (bloque -> empty .)
    IF              reduce using rule 3 (bloque -> empty .)
    WHILE           reduce using rule 3 (bloque -> empty .)
    FOR             reduce using rule 3 (bloque -> empty .)
    DO              reduce using rule 3 (bloque -> empty .)
    STRING          reduce using rule 3 (bloque -> empty .)
    INT             reduce using rule 3 (bloque -> empty .)
    DOUBLE          reduce using rule 3 (bloque -> empty .)
    DYNAMIC         reduce using rule 3 (bloque -> empty .)
    VAR             reduce using rule 3 (bloque -> empty .)
    NULL            reduce using rule 3 (bloque -> empty .)
    $end            reduce using rule 3 (bloque -> empty .)
    PUNTOCOMA       reduce using rule 3 (bloque -> empty .)
    LLAVECIERRA     reduce using rule 3 (bloque -> empty .)

  ! PUNTOCOMA       [ reduce using rule 24 (asignacion -> empty .) ]


state 4

    (4) bloque -> estructuras .

    MAP             reduce using rule 4 (bloque -> estructuras .)
    VARIABLE        reduce using rule 4 (bloque -> estructuras .)
    BOOL            reduce using rule 4 (bloque -> estructuras .)
    IMPORT          reduce using rule 4 (bloque -> estructuras .)
    EXPORT          reduce using rule 4 (bloque -> estructuras .)
    IF              reduce using rule 4 (bloque -> estructuras .)
    WHILE           reduce using rule 4 (bloque -> estructuras .)
    FOR             reduce using rule 4 (bloque -> estructuras .)
    DO              reduce using rule 4 (bloque -> estructuras .)
    STRING          reduce using rule 4 (bloque -> estructuras .)
    INT             reduce using rule 4 (bloque -> estructuras .)
    DOUBLE          reduce using rule 4 (bloque -> estructuras .)
    DYNAMIC         reduce using rule 4 (bloque -> estructuras .)
    VAR             reduce using rule 4 (bloque -> estructuras .)
    NULL            reduce using rule 4 (bloque -> estructuras .)
    $end            reduce using rule 4 (bloque -> estructuras .)
    PUNTOCOMA       reduce using rule 4 (bloque -> estructuras .)
    LLAVECIERRA     reduce using rule 4 (bloque -> estructuras .)


state 5

    (13) expresion -> mapa . PUNTOCOMA
    (45) mapaFunciones -> mapa . PUNTO VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> mapa . PUNTO VARIABLE LPAREN valores

    PUNTOCOMA       shift and go to state 35
    PUNTO           shift and go to state 36


state 6

    (14) expresion -> mapaFunciones . PUNTOCOMA
    (44) mapa -> mapaFunciones .

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
    PUNTOCOMA       shift and go to state 37
    PUNTO           reduce using rule 44 (mapa -> mapaFunciones .)

  ! PUNTOCOMA       [ reduce using rule 44 (mapa -> mapaFunciones .) ]


state 7

    (15) expresion -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 38


state 8

    (16) expresion -> import .

    MAP             reduce using rule 16 (expresion -> import .)
    VARIABLE        reduce using rule 16 (expresion -> import .)
    BOOL            reduce using rule 16 (expresion -> import .)
    IMPORT          reduce using rule 16 (expresion -> import .)
    EXPORT          reduce using rule 16 (expresion -> import .)
    IF              reduce using rule 16 (expresion -> import .)
    WHILE           reduce using rule 16 (expresion -> import .)
    FOR             reduce using rule 16 (expresion -> import .)
    DO              reduce using rule 16 (expresion -> import .)
    STRING          reduce using rule 16 (expresion -> import .)
    INT             reduce using rule 16 (expresion -> import .)
    DOUBLE          reduce using rule 16 (expresion -> import .)
    DYNAMIC         reduce using rule 16 (expresion -> import .)
    VAR             reduce using rule 16 (expresion -> import .)
    NULL            reduce using rule 16 (expresion -> import .)
    $end            reduce using rule 16 (expresion -> import .)
    PUNTOCOMA       reduce using rule 16 (expresion -> import .)
    LLAVECIERRA     reduce using rule 16 (expresion -> import .)


state 9

    (17) expresion -> export .

    MAP             reduce using rule 17 (expresion -> export .)
    VARIABLE        reduce using rule 17 (expresion -> export .)
    BOOL            reduce using rule 17 (expresion -> export .)
    IMPORT          reduce using rule 17 (expresion -> export .)
    EXPORT          reduce using rule 17 (expresion -> export .)
    IF              reduce using rule 17 (expresion -> export .)
    WHILE           reduce using rule 17 (expresion -> export .)
    FOR             reduce using rule 17 (expresion -> export .)
    DO              reduce using rule 17 (expresion -> export .)
    STRING          reduce using rule 17 (expresion -> export .)
    INT             reduce using rule 17 (expresion -> export .)
    DOUBLE          reduce using rule 17 (expresion -> export .)
    DYNAMIC         reduce using rule 17 (expresion -> export .)
    VAR             reduce using rule 17 (expresion -> export .)
    NULL            reduce using rule 17 (expresion -> export .)
    $end            reduce using rule 17 (expresion -> export .)
    PUNTOCOMA       reduce using rule 17 (expresion -> export .)
    LLAVECIERRA     reduce using rule 17 (expresion -> export .)


state 10

    (66) estructuras -> estructuraIf .
    (73) estructuraIfElse -> estructuraIf . ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> estructuraIf . ELSE LLAVEABRE estructuraIf LLAVECIERRA

    MAP             reduce using rule 66 (estructuras -> estructuraIf .)
    VARIABLE        reduce using rule 66 (estructuras -> estructuraIf .)
    BOOL            reduce using rule 66 (estructuras -> estructuraIf .)
    IMPORT          reduce using rule 66 (estructuras -> estructuraIf .)
    EXPORT          reduce using rule 66 (estructuras -> estructuraIf .)
    IF              reduce using rule 66 (estructuras -> estructuraIf .)
    WHILE           reduce using rule 66 (estructuras -> estructuraIf .)
    FOR             reduce using rule 66 (estructuras -> estructuraIf .)
    DO              reduce using rule 66 (estructuras -> estructuraIf .)
    STRING          reduce using rule 66 (estructuras -> estructuraIf .)
    INT             reduce using rule 66 (estructuras -> estructuraIf .)
    DOUBLE          reduce using rule 66 (estructuras -> estructuraIf .)
    DYNAMIC         reduce using rule 66 (estructuras -> estructuraIf .)
    VAR             reduce using rule 66 (estructuras -> estructuraIf .)
    NULL            reduce using rule 66 (estructuras -> estructuraIf .)
    $end            reduce using rule 66 (estructuras -> estructuraIf .)
    PUNTOCOMA       reduce using rule 66 (estructuras -> estructuraIf .)
    LLAVECIERRA     reduce using rule 66 (estructuras -> estructuraIf .)
    ELSE            shift and go to state 39


state 11

    (67) estructuras -> estructuraWhile .

    MAP             reduce using rule 67 (estructuras -> estructuraWhile .)
    VARIABLE        reduce using rule 67 (estructuras -> estructuraWhile .)
    BOOL            reduce using rule 67 (estructuras -> estructuraWhile .)
    IMPORT          reduce using rule 67 (estructuras -> estructuraWhile .)
    EXPORT          reduce using rule 67 (estructuras -> estructuraWhile .)
    IF              reduce using rule 67 (estructuras -> estructuraWhile .)
    WHILE           reduce using rule 67 (estructuras -> estructuraWhile .)
    FOR             reduce using rule 67 (estructuras -> estructuraWhile .)
    DO              reduce using rule 67 (estructuras -> estructuraWhile .)
    STRING          reduce using rule 67 (estructuras -> estructuraWhile .)
    INT             reduce using rule 67 (estructuras -> estructuraWhile .)
    DOUBLE          reduce using rule 67 (estructuras -> estructuraWhile .)
    DYNAMIC         reduce using rule 67 (estructuras -> estructuraWhile .)
    VAR             reduce using rule 67 (estructuras -> estructuraWhile .)
    NULL            reduce using rule 67 (estructuras -> estructuraWhile .)
    $end            reduce using rule 67 (estructuras -> estructuraWhile .)
    PUNTOCOMA       reduce using rule 67 (estructuras -> estructuraWhile .)
    LLAVECIERRA     reduce using rule 67 (estructuras -> estructuraWhile .)


state 12

    (68) estructuras -> estructuraFor .

    MAP             reduce using rule 68 (estructuras -> estructuraFor .)
    VARIABLE        reduce using rule 68 (estructuras -> estructuraFor .)
    BOOL            reduce using rule 68 (estructuras -> estructuraFor .)
    IMPORT          reduce using rule 68 (estructuras -> estructuraFor .)
    EXPORT          reduce using rule 68 (estructuras -> estructuraFor .)
    IF              reduce using rule 68 (estructuras -> estructuraFor .)
    WHILE           reduce using rule 68 (estructuras -> estructuraFor .)
    FOR             reduce using rule 68 (estructuras -> estructuraFor .)
    DO              reduce using rule 68 (estructuras -> estructuraFor .)
    STRING          reduce using rule 68 (estructuras -> estructuraFor .)
    INT             reduce using rule 68 (estructuras -> estructuraFor .)
    DOUBLE          reduce using rule 68 (estructuras -> estructuraFor .)
    DYNAMIC         reduce using rule 68 (estructuras -> estructuraFor .)
    VAR             reduce using rule 68 (estructuras -> estructuraFor .)
    NULL            reduce using rule 68 (estructuras -> estructuraFor .)
    $end            reduce using rule 68 (estructuras -> estructuraFor .)
    PUNTOCOMA       reduce using rule 68 (estructuras -> estructuraFor .)
    LLAVECIERRA     reduce using rule 68 (estructuras -> estructuraFor .)


state 13

    (69) estructuras -> doWhile .

    MAP             reduce using rule 69 (estructuras -> doWhile .)
    VARIABLE        reduce using rule 69 (estructuras -> doWhile .)
    BOOL            reduce using rule 69 (estructuras -> doWhile .)
    IMPORT          reduce using rule 69 (estructuras -> doWhile .)
    EXPORT          reduce using rule 69 (estructuras -> doWhile .)
    IF              reduce using rule 69 (estructuras -> doWhile .)
    WHILE           reduce using rule 69 (estructuras -> doWhile .)
    FOR             reduce using rule 69 (estructuras -> doWhile .)
    DO              reduce using rule 69 (estructuras -> doWhile .)
    STRING          reduce using rule 69 (estructuras -> doWhile .)
    INT             reduce using rule 69 (estructuras -> doWhile .)
    DOUBLE          reduce using rule 69 (estructuras -> doWhile .)
    DYNAMIC         reduce using rule 69 (estructuras -> doWhile .)
    VAR             reduce using rule 69 (estructuras -> doWhile .)
    NULL            reduce using rule 69 (estructuras -> doWhile .)
    $end            reduce using rule 69 (estructuras -> doWhile .)
    PUNTOCOMA       reduce using rule 69 (estructuras -> doWhile .)
    LLAVECIERRA     reduce using rule 69 (estructuras -> doWhile .)


state 14

    (43) mapa -> MAP . MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa

    MENORQUE        shift and go to state 40


state 15

    (21) asignacion -> tipoDato . VARIABLE IGUAL valores
    (23) asignacion -> tipoDato . VARIABLE IGUAL operacion_aritmetica

    VARIABLE        shift and go to state 41


state 16

    (47) mapaFunciones -> VARIABLE . PUNTO VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> VARIABLE . PUNTO VARIABLE LPAREN valores RPAREN
    (20) asignacion -> VARIABLE . operadores_asignacion valores
    (33) operadores_asignacion -> . IGUAL
    (34) operadores_asignacion -> . ASIGNACIONAUMENTADA
    (35) operadores_asignacion -> . ASIGNACIONDISMINUIDA

    PUNTO           shift and go to state 42
    IGUAL           shift and go to state 44
    ASIGNACIONAUMENTADA shift and go to state 45
    ASIGNACIONDISMINUIDA shift and go to state 46

    operadores_asignacion          shift and go to state 43

state 17

    (22) asignacion -> BOOL . VARIABLE IGUAL comparacion
    (61) tipoDato -> BOOL .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 47

  ! VARIABLE        [ reduce using rule 61 (tipoDato -> BOOL .) ]


state 18

    (18) import -> IMPORT . CADENA PUNTOCOMA

    CADENA          shift and go to state 48


state 19

    (19) export -> EXPORT . CADENA PUNTOCOMA

    CADENA          shift and go to state 49


state 20

    (70) estructuraIf -> IF . LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> IF . LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA

    LPAREN          shift and go to state 50


state 21

    (72) estructuraIf -> estructuraIfElse .

    ELSE            reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    MAP             reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    VARIABLE        reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    BOOL            reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    IMPORT          reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    EXPORT          reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    IF              reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    WHILE           reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    FOR             reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    DO              reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    STRING          reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    INT             reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    DOUBLE          reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    DYNAMIC         reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    VAR             reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    NULL            reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    $end            reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    PUNTOCOMA       reduce using rule 72 (estructuraIf -> estructuraIfElse .)
    LLAVECIERRA     reduce using rule 72 (estructuraIf -> estructuraIfElse .)


state 22

    (75) estructuraWhile -> WHILE . LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA

    LPAREN          shift and go to state 51


state 23

    (76) estructuraFor -> FOR . LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA

    LPAREN          shift and go to state 52


state 24

    (91) doWhile -> DO . LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN

    LLAVEABRE       shift and go to state 53


state 25

    (59) tipoDato -> STRING .

    VARIABLE        reduce using rule 59 (tipoDato -> STRING .)
    COMA            reduce using rule 59 (tipoDato -> STRING .)
    MAYORQUE        reduce using rule 59 (tipoDato -> STRING .)
    MENORQUE        reduce using rule 59 (tipoDato -> STRING .)
    IGUALQUE        reduce using rule 59 (tipoDato -> STRING .)
    DIFERENTEQUE    reduce using rule 59 (tipoDato -> STRING .)
    RPAREN          reduce using rule 59 (tipoDato -> STRING .)
    PUNTOCOMA       reduce using rule 59 (tipoDato -> STRING .)


state 26

    (60) tipoDato -> INT .

    VARIABLE        reduce using rule 60 (tipoDato -> INT .)
    COMA            reduce using rule 60 (tipoDato -> INT .)
    MAYORQUE        reduce using rule 60 (tipoDato -> INT .)
    MENORQUE        reduce using rule 60 (tipoDato -> INT .)
    IGUALQUE        reduce using rule 60 (tipoDato -> INT .)
    DIFERENTEQUE    reduce using rule 60 (tipoDato -> INT .)
    RPAREN          reduce using rule 60 (tipoDato -> INT .)
    PUNTOCOMA       reduce using rule 60 (tipoDato -> INT .)


state 27

    (62) tipoDato -> DOUBLE .

    VARIABLE        reduce using rule 62 (tipoDato -> DOUBLE .)
    COMA            reduce using rule 62 (tipoDato -> DOUBLE .)
    MAYORQUE        reduce using rule 62 (tipoDato -> DOUBLE .)
    MENORQUE        reduce using rule 62 (tipoDato -> DOUBLE .)
    IGUALQUE        reduce using rule 62 (tipoDato -> DOUBLE .)
    DIFERENTEQUE    reduce using rule 62 (tipoDato -> DOUBLE .)
    RPAREN          reduce using rule 62 (tipoDato -> DOUBLE .)
    PUNTOCOMA       reduce using rule 62 (tipoDato -> DOUBLE .)


state 28

    (63) tipoDato -> DYNAMIC .

    VARIABLE        reduce using rule 63 (tipoDato -> DYNAMIC .)
    COMA            reduce using rule 63 (tipoDato -> DYNAMIC .)
    MAYORQUE        reduce using rule 63 (tipoDato -> DYNAMIC .)
    MENORQUE        reduce using rule 63 (tipoDato -> DYNAMIC .)
    IGUALQUE        reduce using rule 63 (tipoDato -> DYNAMIC .)
    DIFERENTEQUE    reduce using rule 63 (tipoDato -> DYNAMIC .)
    RPAREN          reduce using rule 63 (tipoDato -> DYNAMIC .)
    PUNTOCOMA       reduce using rule 63 (tipoDato -> DYNAMIC .)


state 29

    (64) tipoDato -> VAR .

    VARIABLE        reduce using rule 64 (tipoDato -> VAR .)
    COMA            reduce using rule 64 (tipoDato -> VAR .)
    MAYORQUE        reduce using rule 64 (tipoDato -> VAR .)
    MENORQUE        reduce using rule 64 (tipoDato -> VAR .)
    IGUALQUE        reduce using rule 64 (tipoDato -> VAR .)
    DIFERENTEQUE    reduce using rule 64 (tipoDato -> VAR .)
    RPAREN          reduce using rule 64 (tipoDato -> VAR .)
    PUNTOCOMA       reduce using rule 64 (tipoDato -> VAR .)


state 30

    (65) tipoDato -> nulValue .

    VARIABLE        reduce using rule 65 (tipoDato -> nulValue .)
    COMA            reduce using rule 65 (tipoDato -> nulValue .)
    MAYORQUE        reduce using rule 65 (tipoDato -> nulValue .)
    MENORQUE        reduce using rule 65 (tipoDato -> nulValue .)
    IGUALQUE        reduce using rule 65 (tipoDato -> nulValue .)
    DIFERENTEQUE    reduce using rule 65 (tipoDato -> nulValue .)
    RPAREN          reduce using rule 65 (tipoDato -> nulValue .)
    PUNTOCOMA       reduce using rule 65 (tipoDato -> nulValue .)


state 31

    (90) nulValue -> NULL .

    VARIABLE        reduce using rule 90 (nulValue -> NULL .)
    COMA            reduce using rule 90 (nulValue -> NULL .)
    MAYORQUE        reduce using rule 90 (nulValue -> NULL .)
    MENORQUE        reduce using rule 90 (nulValue -> NULL .)
    IGUALQUE        reduce using rule 90 (nulValue -> NULL .)
    DIFERENTEQUE    reduce using rule 90 (nulValue -> NULL .)
    RPAREN          reduce using rule 90 (nulValue -> NULL .)
    PUNTOCOMA       reduce using rule 90 (nulValue -> NULL .)


state 32

    (2) bloque -> bloque expresion .

    MAP             reduce using rule 2 (bloque -> bloque expresion .)
    VARIABLE        reduce using rule 2 (bloque -> bloque expresion .)
    BOOL            reduce using rule 2 (bloque -> bloque expresion .)
    IMPORT          reduce using rule 2 (bloque -> bloque expresion .)
    EXPORT          reduce using rule 2 (bloque -> bloque expresion .)
    IF              reduce using rule 2 (bloque -> bloque expresion .)
    WHILE           reduce using rule 2 (bloque -> bloque expresion .)
    FOR             reduce using rule 2 (bloque -> bloque expresion .)
    DO              reduce using rule 2 (bloque -> bloque expresion .)
    STRING          reduce using rule 2 (bloque -> bloque expresion .)
    INT             reduce using rule 2 (bloque -> bloque expresion .)
    DOUBLE          reduce using rule 2 (bloque -> bloque expresion .)
    DYNAMIC         reduce using rule 2 (bloque -> bloque expresion .)
    VAR             reduce using rule 2 (bloque -> bloque expresion .)
    NULL            reduce using rule 2 (bloque -> bloque expresion .)
    $end            reduce using rule 2 (bloque -> bloque expresion .)
    PUNTOCOMA       reduce using rule 2 (bloque -> bloque expresion .)
    LLAVECIERRA     reduce using rule 2 (bloque -> bloque expresion .)


state 33

    (5) bloque -> bloque estructuras .

    MAP             reduce using rule 5 (bloque -> bloque estructuras .)
    VARIABLE        reduce using rule 5 (bloque -> bloque estructuras .)
    BOOL            reduce using rule 5 (bloque -> bloque estructuras .)
    IMPORT          reduce using rule 5 (bloque -> bloque estructuras .)
    EXPORT          reduce using rule 5 (bloque -> bloque estructuras .)
    IF              reduce using rule 5 (bloque -> bloque estructuras .)
    WHILE           reduce using rule 5 (bloque -> bloque estructuras .)
    FOR             reduce using rule 5 (bloque -> bloque estructuras .)
    DO              reduce using rule 5 (bloque -> bloque estructuras .)
    STRING          reduce using rule 5 (bloque -> bloque estructuras .)
    INT             reduce using rule 5 (bloque -> bloque estructuras .)
    DOUBLE          reduce using rule 5 (bloque -> bloque estructuras .)
    DYNAMIC         reduce using rule 5 (bloque -> bloque estructuras .)
    VAR             reduce using rule 5 (bloque -> bloque estructuras .)
    NULL            reduce using rule 5 (bloque -> bloque estructuras .)
    $end            reduce using rule 5 (bloque -> bloque estructuras .)
    PUNTOCOMA       reduce using rule 5 (bloque -> bloque estructuras .)
    LLAVECIERRA     reduce using rule 5 (bloque -> bloque estructuras .)


state 34

    (24) asignacion -> empty .

    PUNTOCOMA       reduce using rule 24 (asignacion -> empty .)


state 35

    (13) expresion -> mapa PUNTOCOMA .

    MAP             reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    VARIABLE        reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    BOOL            reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    IMPORT          reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    EXPORT          reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    IF              reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    WHILE           reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    FOR             reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    DO              reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    STRING          reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    INT             reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    DOUBLE          reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    DYNAMIC         reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    VAR             reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    NULL            reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    $end            reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 13 (expresion -> mapa PUNTOCOMA .)
    LLAVECIERRA     reduce using rule 13 (expresion -> mapa PUNTOCOMA .)


state 36

    (45) mapaFunciones -> mapa PUNTO . VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> mapa PUNTO . VARIABLE LPAREN valores

    VARIABLE        shift and go to state 54


state 37

    (14) expresion -> mapaFunciones PUNTOCOMA .

    MAP             reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    VARIABLE        reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    BOOL            reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    IMPORT          reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    EXPORT          reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    IF              reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    WHILE           reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    FOR             reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    DO              reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    STRING          reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    INT             reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    DOUBLE          reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    DYNAMIC         reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    VAR             reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    NULL            reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    $end            reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)
    LLAVECIERRA     reduce using rule 14 (expresion -> mapaFunciones PUNTOCOMA .)


state 38

    (15) expresion -> asignacion PUNTOCOMA .

    MAP             reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    VARIABLE        reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    BOOL            reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    IMPORT          reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    EXPORT          reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    IF              reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    WHILE           reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    FOR             reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    DO              reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    STRING          reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    INT             reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    DOUBLE          reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    DYNAMIC         reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    VAR             reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    NULL            reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    $end            reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)
    LLAVECIERRA     reduce using rule 15 (expresion -> asignacion PUNTOCOMA .)


state 39

    (73) estructuraIfElse -> estructuraIf ELSE . LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> estructuraIf ELSE . LLAVEABRE estructuraIf LLAVECIERRA

    LLAVEABRE       shift and go to state 55


state 40

    (43) mapa -> MAP MENORQUE . tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (90) nulValue -> . NULL

    STRING          shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 57
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    NULL            shift and go to state 31

    tipoDato                       shift and go to state 56
    nulValue                       shift and go to state 30

state 41

    (21) asignacion -> tipoDato VARIABLE . IGUAL valores
    (23) asignacion -> tipoDato VARIABLE . IGUAL operacion_aritmetica

    IGUAL           shift and go to state 58


state 42

    (47) mapaFunciones -> VARIABLE PUNTO . VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> VARIABLE PUNTO . VARIABLE LPAREN valores RPAREN

    VARIABLE        shift and go to state 59


state 43

    (20) asignacion -> VARIABLE operadores_asignacion . valores
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    valores                        shift and go to state 61
    booleano                       shift and go to state 64

state 44

    (33) operadores_asignacion -> IGUAL .

    VARIABLE        reduce using rule 33 (operadores_asignacion -> IGUAL .)
    NUMERO          reduce using rule 33 (operadores_asignacion -> IGUAL .)
    CADENA          reduce using rule 33 (operadores_asignacion -> IGUAL .)
    TRUE            reduce using rule 33 (operadores_asignacion -> IGUAL .)
    FALSE           reduce using rule 33 (operadores_asignacion -> IGUAL .)


state 45

    (34) operadores_asignacion -> ASIGNACIONAUMENTADA .

    VARIABLE        reduce using rule 34 (operadores_asignacion -> ASIGNACIONAUMENTADA .)
    NUMERO          reduce using rule 34 (operadores_asignacion -> ASIGNACIONAUMENTADA .)
    CADENA          reduce using rule 34 (operadores_asignacion -> ASIGNACIONAUMENTADA .)
    TRUE            reduce using rule 34 (operadores_asignacion -> ASIGNACIONAUMENTADA .)
    FALSE           reduce using rule 34 (operadores_asignacion -> ASIGNACIONAUMENTADA .)


state 46

    (35) operadores_asignacion -> ASIGNACIONDISMINUIDA .

    VARIABLE        reduce using rule 35 (operadores_asignacion -> ASIGNACIONDISMINUIDA .)
    NUMERO          reduce using rule 35 (operadores_asignacion -> ASIGNACIONDISMINUIDA .)
    CADENA          reduce using rule 35 (operadores_asignacion -> ASIGNACIONDISMINUIDA .)
    TRUE            reduce using rule 35 (operadores_asignacion -> ASIGNACIONDISMINUIDA .)
    FALSE           reduce using rule 35 (operadores_asignacion -> ASIGNACIONDISMINUIDA .)


state 47

    (22) asignacion -> BOOL VARIABLE . IGUAL comparacion

    IGUAL           shift and go to state 67


state 48

    (18) import -> IMPORT CADENA . PUNTOCOMA

    PUNTOCOMA       shift and go to state 68


state 49

    (19) export -> EXPORT CADENA . PUNTOCOMA

    PUNTOCOMA       shift and go to state 69


state 50

    (70) estructuraIf -> IF LPAREN . argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> IF LPAREN . argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
    (86) argumentoEstructura -> . VARIABLE
    (87) argumentoEstructura -> . booleano
    (88) argumentoEstructura -> . comparacion
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE
    (36) comparacion -> . valores comparador valores
    (37) comparacion -> . comparacion comparador valores
    (38) comparacion -> . valores IS tipoDato
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano

    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63

    argumentoEstructura            shift and go to state 70
    booleano                       shift and go to state 72
    comparacion                    shift and go to state 73
    valores                        shift and go to state 74

state 51

    (75) estructuraWhile -> WHILE LPAREN . argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (86) argumentoEstructura -> . VARIABLE
    (87) argumentoEstructura -> . booleano
    (88) argumentoEstructura -> . comparacion
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE
    (36) comparacion -> . valores comparador valores
    (37) comparacion -> . comparacion comparador valores
    (38) comparacion -> . valores IS tipoDato
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano

    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63

    argumentoEstructura            shift and go to state 75
    booleano                       shift and go to state 72
    comparacion                    shift and go to state 73
    valores                        shift and go to state 74

state 52

    (76) estructuraFor -> FOR LPAREN . asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (77) asignacionVacio -> . asignacion
    (78) asignacionVacio -> . empty
    (20) asignacion -> . VARIABLE operadores_asignacion valores
    (21) asignacion -> . tipoDato VARIABLE IGUAL valores
    (22) asignacion -> . BOOL VARIABLE IGUAL comparacion
    (23) asignacion -> . tipoDato VARIABLE IGUAL operacion_aritmetica
    (24) asignacion -> . empty
    (89) empty -> .
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (90) nulValue -> . NULL

    VARIABLE        shift and go to state 79
    BOOL            shift and go to state 17
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    STRING          shift and go to state 25
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    NULL            shift and go to state 31

    asignacionVacio                shift and go to state 76
    asignacion                     shift and go to state 77
    empty                          shift and go to state 78
    tipoDato                       shift and go to state 15
    nulValue                       shift and go to state 30

state 53

    (91) doWhile -> DO LLAVEABRE . bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (1) bloque -> . expresion
    (2) bloque -> . bloque expresion
    (3) bloque -> . empty
    (4) bloque -> . estructuras
    (5) bloque -> . bloque estructuras
    (13) expresion -> . mapa PUNTOCOMA
    (14) expresion -> . mapaFunciones PUNTOCOMA
    (15) expresion -> . asignacion PUNTOCOMA
    (16) expresion -> . import
    (17) expresion -> . export
    (89) empty -> .
    (66) estructuras -> . estructuraIf
    (67) estructuras -> . estructuraWhile
    (68) estructuras -> . estructuraFor
    (69) estructuras -> . doWhile
    (43) mapa -> . MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (44) mapa -> . mapaFunciones
    (45) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN valores
    (47) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN valores RPAREN
    (20) asignacion -> . VARIABLE operadores_asignacion valores
    (21) asignacion -> . tipoDato VARIABLE IGUAL valores
    (22) asignacion -> . BOOL VARIABLE IGUAL comparacion
    (23) asignacion -> . tipoDato VARIABLE IGUAL operacion_aritmetica
    (24) asignacion -> . empty
    (18) import -> . IMPORT CADENA PUNTOCOMA
    (19) export -> . EXPORT CADENA PUNTOCOMA
    (70) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
    (72) estructuraIf -> . estructuraIfElse
    (75) estructuraWhile -> . WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (76) estructuraFor -> . FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (91) doWhile -> . DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (73) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA
    (90) nulValue -> . NULL

  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for EXPORT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    LLAVECIERRA     reduce using rule 89 (empty -> .)
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    MAP             shift and go to state 14
    VARIABLE        shift and go to state 16
    BOOL            shift and go to state 17
    IMPORT          shift and go to state 18
    EXPORT          shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    DO              shift and go to state 24
    STRING          shift and go to state 25
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    NULL            shift and go to state 31

  ! MAP             [ reduce using rule 89 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 89 (empty -> .) ]
  ! BOOL            [ reduce using rule 89 (empty -> .) ]
  ! IMPORT          [ reduce using rule 89 (empty -> .) ]
  ! EXPORT          [ reduce using rule 89 (empty -> .) ]
  ! IF              [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]
  ! FOR             [ reduce using rule 89 (empty -> .) ]
  ! DO              [ reduce using rule 89 (empty -> .) ]
  ! STRING          [ reduce using rule 89 (empty -> .) ]
  ! INT             [ reduce using rule 89 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 89 (empty -> .) ]
  ! DYNAMIC         [ reduce using rule 89 (empty -> .) ]
  ! VAR             [ reduce using rule 89 (empty -> .) ]
  ! NULL            [ reduce using rule 89 (empty -> .) ]

    bloque                         shift and go to state 80
    expresion                      shift and go to state 2
    empty                          shift and go to state 3
    estructuras                    shift and go to state 4
    mapa                           shift and go to state 5
    mapaFunciones                  shift and go to state 6
    asignacion                     shift and go to state 7
    import                         shift and go to state 8
    export                         shift and go to state 9
    estructuraIf                   shift and go to state 10
    estructuraWhile                shift and go to state 11
    estructuraFor                  shift and go to state 12
    doWhile                        shift and go to state 13
    tipoDato                       shift and go to state 15
    estructuraIfElse               shift and go to state 21
    nulValue                       shift and go to state 30

state 54

    (45) mapaFunciones -> mapa PUNTO VARIABLE . LPAREN RPAREN
    (46) mapaFunciones -> mapa PUNTO VARIABLE . LPAREN valores

    LPAREN          shift and go to state 81


state 55

    (73) estructuraIfElse -> estructuraIf ELSE LLAVEABRE . bloque LLAVECIERRA
    (74) estructuraIfElse -> estructuraIf ELSE LLAVEABRE . estructuraIf LLAVECIERRA
    (1) bloque -> . expresion
    (2) bloque -> . bloque expresion
    (3) bloque -> . empty
    (4) bloque -> . estructuras
    (5) bloque -> . bloque estructuras
    (70) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
    (72) estructuraIf -> . estructuraIfElse
    (13) expresion -> . mapa PUNTOCOMA
    (14) expresion -> . mapaFunciones PUNTOCOMA
    (15) expresion -> . asignacion PUNTOCOMA
    (16) expresion -> . import
    (17) expresion -> . export
    (89) empty -> .
    (66) estructuras -> . estructuraIf
    (67) estructuras -> . estructuraWhile
    (68) estructuras -> . estructuraFor
    (69) estructuras -> . doWhile
    (73) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA
    (43) mapa -> . MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (44) mapa -> . mapaFunciones
    (45) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN valores
    (47) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN valores RPAREN
    (20) asignacion -> . VARIABLE operadores_asignacion valores
    (21) asignacion -> . tipoDato VARIABLE IGUAL valores
    (22) asignacion -> . BOOL VARIABLE IGUAL comparacion
    (23) asignacion -> . tipoDato VARIABLE IGUAL operacion_aritmetica
    (24) asignacion -> . empty
    (18) import -> . IMPORT CADENA PUNTOCOMA
    (19) export -> . EXPORT CADENA PUNTOCOMA
    (75) estructuraWhile -> . WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (76) estructuraFor -> . FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (91) doWhile -> . DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (90) nulValue -> . NULL

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for EXPORT resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    IF              shift and go to state 20
    LLAVECIERRA     reduce using rule 89 (empty -> .)
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    MAP             shift and go to state 14
    VARIABLE        shift and go to state 16
    BOOL            shift and go to state 17
    IMPORT          shift and go to state 18
    EXPORT          shift and go to state 19
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    DO              shift and go to state 24
    STRING          shift and go to state 25
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    NULL            shift and go to state 31

  ! MAP             [ reduce using rule 89 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 89 (empty -> .) ]
  ! BOOL            [ reduce using rule 89 (empty -> .) ]
  ! IMPORT          [ reduce using rule 89 (empty -> .) ]
  ! EXPORT          [ reduce using rule 89 (empty -> .) ]
  ! IF              [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]
  ! FOR             [ reduce using rule 89 (empty -> .) ]
  ! DO              [ reduce using rule 89 (empty -> .) ]
  ! STRING          [ reduce using rule 89 (empty -> .) ]
  ! INT             [ reduce using rule 89 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 89 (empty -> .) ]
  ! DYNAMIC         [ reduce using rule 89 (empty -> .) ]
  ! VAR             [ reduce using rule 89 (empty -> .) ]
  ! NULL            [ reduce using rule 89 (empty -> .) ]

    estructuraIf                   shift and go to state 82
    bloque                         shift and go to state 83
    expresion                      shift and go to state 2
    empty                          shift and go to state 3
    estructuras                    shift and go to state 4
    estructuraIfElse               shift and go to state 21
    mapa                           shift and go to state 5
    mapaFunciones                  shift and go to state 6
    asignacion                     shift and go to state 7
    import                         shift and go to state 8
    export                         shift and go to state 9
    estructuraWhile                shift and go to state 11
    estructuraFor                  shift and go to state 12
    doWhile                        shift and go to state 13
    tipoDato                       shift and go to state 15
    nulValue                       shift and go to state 30

state 56

    (43) mapa -> MAP MENORQUE tipoDato . COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa

    COMA            shift and go to state 84


state 57

    (61) tipoDato -> BOOL .

    COMA            reduce using rule 61 (tipoDato -> BOOL .)
    MAYORQUE        reduce using rule 61 (tipoDato -> BOOL .)
    MENORQUE        reduce using rule 61 (tipoDato -> BOOL .)
    IGUALQUE        reduce using rule 61 (tipoDato -> BOOL .)
    DIFERENTEQUE    reduce using rule 61 (tipoDato -> BOOL .)
    RPAREN          reduce using rule 61 (tipoDato -> BOOL .)
    PUNTOCOMA       reduce using rule 61 (tipoDato -> BOOL .)


state 58

    (21) asignacion -> tipoDato VARIABLE IGUAL . valores
    (23) asignacion -> tipoDato VARIABLE IGUAL . operacion_aritmetica
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (25) operacion_aritmetica -> . valores operadores_aritmeticos valores
    (26) operacion_aritmetica -> . operacion_aritmetica operadores_aritmeticos valores
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    valores                        shift and go to state 85
    operacion_aritmetica           shift and go to state 86
    booleano                       shift and go to state 64

state 59

    (47) mapaFunciones -> VARIABLE PUNTO VARIABLE . LPAREN RPAREN
    (48) mapaFunciones -> VARIABLE PUNTO VARIABLE . LPAREN valores RPAREN

    LPAREN          shift and go to state 87


state 60

    (53) valores -> VARIABLE .

    PUNTOCOMA       reduce using rule 53 (valores -> VARIABLE .)
    SUMA            reduce using rule 53 (valores -> VARIABLE .)
    RESTA           reduce using rule 53 (valores -> VARIABLE .)
    MULTIPLICACION  reduce using rule 53 (valores -> VARIABLE .)
    DIVISION        reduce using rule 53 (valores -> VARIABLE .)
    DIVENTERA       reduce using rule 53 (valores -> VARIABLE .)
    RESIDUO         reduce using rule 53 (valores -> VARIABLE .)
    IS              reduce using rule 53 (valores -> VARIABLE .)
    MENORQUE        reduce using rule 53 (valores -> VARIABLE .)
    MAYORQUE        reduce using rule 53 (valores -> VARIABLE .)
    IGUALQUE        reduce using rule 53 (valores -> VARIABLE .)
    DIFERENTEQUE    reduce using rule 53 (valores -> VARIABLE .)
    PUNTO           reduce using rule 53 (valores -> VARIABLE .)
    RPAREN          reduce using rule 53 (valores -> VARIABLE .)
    DOSPUNTOS       reduce using rule 53 (valores -> VARIABLE .)
    LLAVECIERRA     reduce using rule 53 (valores -> VARIABLE .)
    COMA            reduce using rule 53 (valores -> VARIABLE .)


state 61

    (20) asignacion -> VARIABLE operadores_asignacion valores .

    PUNTOCOMA       reduce using rule 20 (asignacion -> VARIABLE operadores_asignacion valores .)


state 62

    (54) valores -> NUMERO .

    PUNTOCOMA       reduce using rule 54 (valores -> NUMERO .)
    IS              reduce using rule 54 (valores -> NUMERO .)
    MENORQUE        reduce using rule 54 (valores -> NUMERO .)
    MAYORQUE        reduce using rule 54 (valores -> NUMERO .)
    IGUALQUE        reduce using rule 54 (valores -> NUMERO .)
    DIFERENTEQUE    reduce using rule 54 (valores -> NUMERO .)
    SUMA            reduce using rule 54 (valores -> NUMERO .)
    RESTA           reduce using rule 54 (valores -> NUMERO .)
    MULTIPLICACION  reduce using rule 54 (valores -> NUMERO .)
    DIVISION        reduce using rule 54 (valores -> NUMERO .)
    DIVENTERA       reduce using rule 54 (valores -> NUMERO .)
    RESIDUO         reduce using rule 54 (valores -> NUMERO .)
    PUNTO           reduce using rule 54 (valores -> NUMERO .)
    RPAREN          reduce using rule 54 (valores -> NUMERO .)
    DOSPUNTOS       reduce using rule 54 (valores -> NUMERO .)
    LLAVECIERRA     reduce using rule 54 (valores -> NUMERO .)
    COMA            reduce using rule 54 (valores -> NUMERO .)


state 63

    (55) valores -> CADENA .

    PUNTOCOMA       reduce using rule 55 (valores -> CADENA .)
    IS              reduce using rule 55 (valores -> CADENA .)
    MENORQUE        reduce using rule 55 (valores -> CADENA .)
    MAYORQUE        reduce using rule 55 (valores -> CADENA .)
    IGUALQUE        reduce using rule 55 (valores -> CADENA .)
    DIFERENTEQUE    reduce using rule 55 (valores -> CADENA .)
    SUMA            reduce using rule 55 (valores -> CADENA .)
    RESTA           reduce using rule 55 (valores -> CADENA .)
    MULTIPLICACION  reduce using rule 55 (valores -> CADENA .)
    DIVISION        reduce using rule 55 (valores -> CADENA .)
    DIVENTERA       reduce using rule 55 (valores -> CADENA .)
    RESIDUO         reduce using rule 55 (valores -> CADENA .)
    PUNTO           reduce using rule 55 (valores -> CADENA .)
    RPAREN          reduce using rule 55 (valores -> CADENA .)
    DOSPUNTOS       reduce using rule 55 (valores -> CADENA .)
    LLAVECIERRA     reduce using rule 55 (valores -> CADENA .)
    COMA            reduce using rule 55 (valores -> CADENA .)


state 64

    (56) valores -> booleano .

    PUNTOCOMA       reduce using rule 56 (valores -> booleano .)
    SUMA            reduce using rule 56 (valores -> booleano .)
    RESTA           reduce using rule 56 (valores -> booleano .)
    MULTIPLICACION  reduce using rule 56 (valores -> booleano .)
    DIVISION        reduce using rule 56 (valores -> booleano .)
    DIVENTERA       reduce using rule 56 (valores -> booleano .)
    RESIDUO         reduce using rule 56 (valores -> booleano .)
    IS              reduce using rule 56 (valores -> booleano .)
    MENORQUE        reduce using rule 56 (valores -> booleano .)
    MAYORQUE        reduce using rule 56 (valores -> booleano .)
    IGUALQUE        reduce using rule 56 (valores -> booleano .)
    DIFERENTEQUE    reduce using rule 56 (valores -> booleano .)
    PUNTO           reduce using rule 56 (valores -> booleano .)
    RPAREN          reduce using rule 56 (valores -> booleano .)
    DOSPUNTOS       reduce using rule 56 (valores -> booleano .)
    LLAVECIERRA     reduce using rule 56 (valores -> booleano .)
    COMA            reduce using rule 56 (valores -> booleano .)


state 65

    (57) booleano -> TRUE .

    PUNTOCOMA       reduce using rule 57 (booleano -> TRUE .)
    RPAREN          reduce using rule 57 (booleano -> TRUE .)
    IS              reduce using rule 57 (booleano -> TRUE .)
    MENORQUE        reduce using rule 57 (booleano -> TRUE .)
    MAYORQUE        reduce using rule 57 (booleano -> TRUE .)
    IGUALQUE        reduce using rule 57 (booleano -> TRUE .)
    DIFERENTEQUE    reduce using rule 57 (booleano -> TRUE .)
    SUMA            reduce using rule 57 (booleano -> TRUE .)
    RESTA           reduce using rule 57 (booleano -> TRUE .)
    MULTIPLICACION  reduce using rule 57 (booleano -> TRUE .)
    DIVISION        reduce using rule 57 (booleano -> TRUE .)
    DIVENTERA       reduce using rule 57 (booleano -> TRUE .)
    RESIDUO         reduce using rule 57 (booleano -> TRUE .)
    PUNTO           reduce using rule 57 (booleano -> TRUE .)
    DOSPUNTOS       reduce using rule 57 (booleano -> TRUE .)
    LLAVECIERRA     reduce using rule 57 (booleano -> TRUE .)
    COMA            reduce using rule 57 (booleano -> TRUE .)


state 66

    (58) booleano -> FALSE .

    PUNTOCOMA       reduce using rule 58 (booleano -> FALSE .)
    RPAREN          reduce using rule 58 (booleano -> FALSE .)
    IS              reduce using rule 58 (booleano -> FALSE .)
    MENORQUE        reduce using rule 58 (booleano -> FALSE .)
    MAYORQUE        reduce using rule 58 (booleano -> FALSE .)
    IGUALQUE        reduce using rule 58 (booleano -> FALSE .)
    DIFERENTEQUE    reduce using rule 58 (booleano -> FALSE .)
    SUMA            reduce using rule 58 (booleano -> FALSE .)
    RESTA           reduce using rule 58 (booleano -> FALSE .)
    MULTIPLICACION  reduce using rule 58 (booleano -> FALSE .)
    DIVISION        reduce using rule 58 (booleano -> FALSE .)
    DIVENTERA       reduce using rule 58 (booleano -> FALSE .)
    RESIDUO         reduce using rule 58 (booleano -> FALSE .)
    PUNTO           reduce using rule 58 (booleano -> FALSE .)
    DOSPUNTOS       reduce using rule 58 (booleano -> FALSE .)
    LLAVECIERRA     reduce using rule 58 (booleano -> FALSE .)
    COMA            reduce using rule 58 (booleano -> FALSE .)


state 67

    (22) asignacion -> BOOL VARIABLE IGUAL . comparacion
    (36) comparacion -> . valores comparador valores
    (37) comparacion -> . comparacion comparador valores
    (38) comparacion -> . valores IS tipoDato
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    comparacion                    shift and go to state 88
    valores                        shift and go to state 74
    booleano                       shift and go to state 64

state 68

    (18) import -> IMPORT CADENA PUNTOCOMA .

    MAP             reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    VARIABLE        reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    BOOL            reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    IMPORT          reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    EXPORT          reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    IF              reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    WHILE           reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    FOR             reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    DO              reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    STRING          reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    INT             reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    DOUBLE          reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    DYNAMIC         reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    VAR             reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    NULL            reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    $end            reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)
    LLAVECIERRA     reduce using rule 18 (import -> IMPORT CADENA PUNTOCOMA .)


state 69

    (19) export -> EXPORT CADENA PUNTOCOMA .

    MAP             reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    VARIABLE        reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    BOOL            reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    IMPORT          reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    EXPORT          reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    IF              reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    WHILE           reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    FOR             reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    DO              reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    STRING          reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    INT             reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    DOUBLE          reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    DYNAMIC         reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    VAR             reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    NULL            reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    $end            reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)
    LLAVECIERRA     reduce using rule 19 (export -> EXPORT CADENA PUNTOCOMA .)


state 70

    (70) estructuraIf -> IF LPAREN argumentoEstructura . RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> IF LPAREN argumentoEstructura . RPAREN LLAVEABRE estructuraIf LLAVECIERRA

    RPAREN          shift and go to state 89


state 71

    (86) argumentoEstructura -> VARIABLE .
    (53) valores -> VARIABLE .

    RPAREN          reduce using rule 86 (argumentoEstructura -> VARIABLE .)
    IS              reduce using rule 53 (valores -> VARIABLE .)
    MENORQUE        reduce using rule 53 (valores -> VARIABLE .)
    MAYORQUE        reduce using rule 53 (valores -> VARIABLE .)
    IGUALQUE        reduce using rule 53 (valores -> VARIABLE .)
    DIFERENTEQUE    reduce using rule 53 (valores -> VARIABLE .)


state 72

    (87) argumentoEstructura -> booleano .
    (56) valores -> booleano .

    RPAREN          reduce using rule 87 (argumentoEstructura -> booleano .)
    IS              reduce using rule 56 (valores -> booleano .)
    MENORQUE        reduce using rule 56 (valores -> booleano .)
    MAYORQUE        reduce using rule 56 (valores -> booleano .)
    IGUALQUE        reduce using rule 56 (valores -> booleano .)
    DIFERENTEQUE    reduce using rule 56 (valores -> booleano .)


state 73

    (88) argumentoEstructura -> comparacion .
    (37) comparacion -> comparacion . comparador valores
    (39) comparador -> . MENORQUE
    (40) comparador -> . MAYORQUE
    (41) comparador -> . IGUALQUE
    (42) comparador -> . DIFERENTEQUE

    RPAREN          reduce using rule 88 (argumentoEstructura -> comparacion .)
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    IGUALQUE        shift and go to state 93
    DIFERENTEQUE    shift and go to state 94

    comparador                     shift and go to state 90

state 74

    (36) comparacion -> valores . comparador valores
    (38) comparacion -> valores . IS tipoDato
    (39) comparador -> . MENORQUE
    (40) comparador -> . MAYORQUE
    (41) comparador -> . IGUALQUE
    (42) comparador -> . DIFERENTEQUE

    IS              shift and go to state 96
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    IGUALQUE        shift and go to state 93
    DIFERENTEQUE    shift and go to state 94

    comparador                     shift and go to state 95

state 75

    (75) estructuraWhile -> WHILE LPAREN argumentoEstructura . RPAREN LLAVEABRE bloque LLAVECIERRA

    RPAREN          shift and go to state 97


state 76

    (76) estructuraFor -> FOR LPAREN asignacionVacio . PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA

    PUNTOCOMA       shift and go to state 98


state 77

    (77) asignacionVacio -> asignacion .

    PUNTOCOMA       reduce using rule 77 (asignacionVacio -> asignacion .)


state 78

    (78) asignacionVacio -> empty .
    (24) asignacion -> empty .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 24 (asignacion -> empty .)
    PUNTOCOMA       reduce using rule 24 (asignacion -> empty .)

  ! PUNTOCOMA       [ reduce using rule 78 (asignacionVacio -> empty .) ]


state 79

    (20) asignacion -> VARIABLE . operadores_asignacion valores
    (33) operadores_asignacion -> . IGUAL
    (34) operadores_asignacion -> . ASIGNACIONAUMENTADA
    (35) operadores_asignacion -> . ASIGNACIONDISMINUIDA

    IGUAL           shift and go to state 44
    ASIGNACIONAUMENTADA shift and go to state 45
    ASIGNACIONDISMINUIDA shift and go to state 46

    operadores_asignacion          shift and go to state 43

state 80

    (91) doWhile -> DO LLAVEABRE bloque . LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (2) bloque -> bloque . expresion
    (5) bloque -> bloque . estructuras
    (13) expresion -> . mapa PUNTOCOMA
    (14) expresion -> . mapaFunciones PUNTOCOMA
    (15) expresion -> . asignacion PUNTOCOMA
    (16) expresion -> . import
    (17) expresion -> . export
    (66) estructuras -> . estructuraIf
    (67) estructuras -> . estructuraWhile
    (68) estructuras -> . estructuraFor
    (69) estructuras -> . doWhile
    (43) mapa -> . MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (44) mapa -> . mapaFunciones
    (45) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN valores
    (47) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN valores RPAREN
    (20) asignacion -> . VARIABLE operadores_asignacion valores
    (21) asignacion -> . tipoDato VARIABLE IGUAL valores
    (22) asignacion -> . BOOL VARIABLE IGUAL comparacion
    (23) asignacion -> . tipoDato VARIABLE IGUAL operacion_aritmetica
    (24) asignacion -> . empty
    (18) import -> . IMPORT CADENA PUNTOCOMA
    (19) export -> . EXPORT CADENA PUNTOCOMA
    (70) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
    (72) estructuraIf -> . estructuraIfElse
    (75) estructuraWhile -> . WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (76) estructuraFor -> . FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (91) doWhile -> . DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (89) empty -> .
    (73) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA
    (90) nulValue -> . NULL

    LLAVECIERRA     shift and go to state 99
    MAP             shift and go to state 14
    VARIABLE        shift and go to state 16
    BOOL            shift and go to state 17
    IMPORT          shift and go to state 18
    EXPORT          shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    DO              shift and go to state 24
    STRING          shift and go to state 25
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    NULL            shift and go to state 31

    expresion                      shift and go to state 32
    estructuras                    shift and go to state 33
    mapa                           shift and go to state 5
    mapaFunciones                  shift and go to state 6
    asignacion                     shift and go to state 7
    import                         shift and go to state 8
    export                         shift and go to state 9
    estructuraIf                   shift and go to state 10
    estructuraWhile                shift and go to state 11
    estructuraFor                  shift and go to state 12
    doWhile                        shift and go to state 13
    tipoDato                       shift and go to state 15
    empty                          shift and go to state 34
    estructuraIfElse               shift and go to state 21
    nulValue                       shift and go to state 30

state 81

    (45) mapaFunciones -> mapa PUNTO VARIABLE LPAREN . RPAREN
    (46) mapaFunciones -> mapa PUNTO VARIABLE LPAREN . valores
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

    RPAREN          shift and go to state 100
    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    valores                        shift and go to state 101
    booleano                       shift and go to state 64

state 82

    (74) estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf . LLAVECIERRA
    (66) estructuras -> estructuraIf .
    (73) estructuraIfElse -> estructuraIf . ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> estructuraIf . ELSE LLAVEABRE estructuraIf LLAVECIERRA

  ! shift/reduce conflict for LLAVECIERRA resolved as shift
    LLAVECIERRA     shift and go to state 102
    MAP             reduce using rule 66 (estructuras -> estructuraIf .)
    VARIABLE        reduce using rule 66 (estructuras -> estructuraIf .)
    BOOL            reduce using rule 66 (estructuras -> estructuraIf .)
    IMPORT          reduce using rule 66 (estructuras -> estructuraIf .)
    EXPORT          reduce using rule 66 (estructuras -> estructuraIf .)
    IF              reduce using rule 66 (estructuras -> estructuraIf .)
    WHILE           reduce using rule 66 (estructuras -> estructuraIf .)
    FOR             reduce using rule 66 (estructuras -> estructuraIf .)
    DO              reduce using rule 66 (estructuras -> estructuraIf .)
    STRING          reduce using rule 66 (estructuras -> estructuraIf .)
    INT             reduce using rule 66 (estructuras -> estructuraIf .)
    DOUBLE          reduce using rule 66 (estructuras -> estructuraIf .)
    DYNAMIC         reduce using rule 66 (estructuras -> estructuraIf .)
    VAR             reduce using rule 66 (estructuras -> estructuraIf .)
    NULL            reduce using rule 66 (estructuras -> estructuraIf .)
    PUNTOCOMA       reduce using rule 66 (estructuras -> estructuraIf .)
    ELSE            shift and go to state 39

  ! LLAVECIERRA     [ reduce using rule 66 (estructuras -> estructuraIf .) ]


state 83

    (73) estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque . LLAVECIERRA
    (2) bloque -> bloque . expresion
    (5) bloque -> bloque . estructuras
    (13) expresion -> . mapa PUNTOCOMA
    (14) expresion -> . mapaFunciones PUNTOCOMA
    (15) expresion -> . asignacion PUNTOCOMA
    (16) expresion -> . import
    (17) expresion -> . export
    (66) estructuras -> . estructuraIf
    (67) estructuras -> . estructuraWhile
    (68) estructuras -> . estructuraFor
    (69) estructuras -> . doWhile
    (43) mapa -> . MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (44) mapa -> . mapaFunciones
    (45) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN valores
    (47) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN valores RPAREN
    (20) asignacion -> . VARIABLE operadores_asignacion valores
    (21) asignacion -> . tipoDato VARIABLE IGUAL valores
    (22) asignacion -> . BOOL VARIABLE IGUAL comparacion
    (23) asignacion -> . tipoDato VARIABLE IGUAL operacion_aritmetica
    (24) asignacion -> . empty
    (18) import -> . IMPORT CADENA PUNTOCOMA
    (19) export -> . EXPORT CADENA PUNTOCOMA
    (70) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
    (72) estructuraIf -> . estructuraIfElse
    (75) estructuraWhile -> . WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (76) estructuraFor -> . FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (91) doWhile -> . DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (89) empty -> .
    (73) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA
    (90) nulValue -> . NULL

    LLAVECIERRA     shift and go to state 103
    MAP             shift and go to state 14
    VARIABLE        shift and go to state 16
    BOOL            shift and go to state 17
    IMPORT          shift and go to state 18
    EXPORT          shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    DO              shift and go to state 24
    STRING          shift and go to state 25
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    NULL            shift and go to state 31

    estructuraIf                   shift and go to state 10
    expresion                      shift and go to state 32
    estructuras                    shift and go to state 33
    mapa                           shift and go to state 5
    mapaFunciones                  shift and go to state 6
    asignacion                     shift and go to state 7
    import                         shift and go to state 8
    export                         shift and go to state 9
    estructuraWhile                shift and go to state 11
    estructuraFor                  shift and go to state 12
    doWhile                        shift and go to state 13
    tipoDato                       shift and go to state 15
    empty                          shift and go to state 34
    estructuraIfElse               shift and go to state 21
    nulValue                       shift and go to state 30

state 84

    (43) mapa -> MAP MENORQUE tipoDato COMA . tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (90) nulValue -> . NULL

    STRING          shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 57
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    NULL            shift and go to state 31

    tipoDato                       shift and go to state 104
    nulValue                       shift and go to state 30

state 85

    (21) asignacion -> tipoDato VARIABLE IGUAL valores .
    (25) operacion_aritmetica -> valores . operadores_aritmeticos valores
    (27) operadores_aritmeticos -> . SUMA
    (28) operadores_aritmeticos -> . RESTA
    (29) operadores_aritmeticos -> . MULTIPLICACION
    (30) operadores_aritmeticos -> . DIVISION
    (31) operadores_aritmeticos -> . DIVENTERA
    (32) operadores_aritmeticos -> . RESIDUO

    PUNTOCOMA       reduce using rule 21 (asignacion -> tipoDato VARIABLE IGUAL valores .)
    SUMA            shift and go to state 106
    RESTA           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    DIVENTERA       shift and go to state 110
    RESIDUO         shift and go to state 111

    operadores_aritmeticos         shift and go to state 105

state 86

    (23) asignacion -> tipoDato VARIABLE IGUAL operacion_aritmetica .
    (26) operacion_aritmetica -> operacion_aritmetica . operadores_aritmeticos valores
    (27) operadores_aritmeticos -> . SUMA
    (28) operadores_aritmeticos -> . RESTA
    (29) operadores_aritmeticos -> . MULTIPLICACION
    (30) operadores_aritmeticos -> . DIVISION
    (31) operadores_aritmeticos -> . DIVENTERA
    (32) operadores_aritmeticos -> . RESIDUO

    PUNTOCOMA       reduce using rule 23 (asignacion -> tipoDato VARIABLE IGUAL operacion_aritmetica .)
    SUMA            shift and go to state 106
    RESTA           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    DIVENTERA       shift and go to state 110
    RESIDUO         shift and go to state 111

    operadores_aritmeticos         shift and go to state 112

state 87

    (47) mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN . RPAREN
    (48) mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN . valores RPAREN
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

    RPAREN          shift and go to state 113
    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    valores                        shift and go to state 114
    booleano                       shift and go to state 64

state 88

    (22) asignacion -> BOOL VARIABLE IGUAL comparacion .
    (37) comparacion -> comparacion . comparador valores
    (39) comparador -> . MENORQUE
    (40) comparador -> . MAYORQUE
    (41) comparador -> . IGUALQUE
    (42) comparador -> . DIFERENTEQUE

    PUNTOCOMA       reduce using rule 22 (asignacion -> BOOL VARIABLE IGUAL comparacion .)
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    IGUALQUE        shift and go to state 93
    DIFERENTEQUE    shift and go to state 94

    comparador                     shift and go to state 90

state 89

    (70) estructuraIf -> IF LPAREN argumentoEstructura RPAREN . LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> IF LPAREN argumentoEstructura RPAREN . LLAVEABRE estructuraIf LLAVECIERRA

    LLAVEABRE       shift and go to state 115


state 90

    (37) comparacion -> comparacion comparador . valores
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    valores                        shift and go to state 116
    booleano                       shift and go to state 64

state 91

    (39) comparador -> MENORQUE .

    VARIABLE        reduce using rule 39 (comparador -> MENORQUE .)
    NUMERO          reduce using rule 39 (comparador -> MENORQUE .)
    CADENA          reduce using rule 39 (comparador -> MENORQUE .)
    TRUE            reduce using rule 39 (comparador -> MENORQUE .)
    FALSE           reduce using rule 39 (comparador -> MENORQUE .)


state 92

    (40) comparador -> MAYORQUE .

    VARIABLE        reduce using rule 40 (comparador -> MAYORQUE .)
    NUMERO          reduce using rule 40 (comparador -> MAYORQUE .)
    CADENA          reduce using rule 40 (comparador -> MAYORQUE .)
    TRUE            reduce using rule 40 (comparador -> MAYORQUE .)
    FALSE           reduce using rule 40 (comparador -> MAYORQUE .)


state 93

    (41) comparador -> IGUALQUE .

    VARIABLE        reduce using rule 41 (comparador -> IGUALQUE .)
    NUMERO          reduce using rule 41 (comparador -> IGUALQUE .)
    CADENA          reduce using rule 41 (comparador -> IGUALQUE .)
    TRUE            reduce using rule 41 (comparador -> IGUALQUE .)
    FALSE           reduce using rule 41 (comparador -> IGUALQUE .)


state 94

    (42) comparador -> DIFERENTEQUE .

    VARIABLE        reduce using rule 42 (comparador -> DIFERENTEQUE .)
    NUMERO          reduce using rule 42 (comparador -> DIFERENTEQUE .)
    CADENA          reduce using rule 42 (comparador -> DIFERENTEQUE .)
    TRUE            reduce using rule 42 (comparador -> DIFERENTEQUE .)
    FALSE           reduce using rule 42 (comparador -> DIFERENTEQUE .)


state 95

    (36) comparacion -> valores comparador . valores
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    valores                        shift and go to state 117
    booleano                       shift and go to state 64

state 96

    (38) comparacion -> valores IS . tipoDato
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (90) nulValue -> . NULL

    STRING          shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 57
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    NULL            shift and go to state 31

    tipoDato                       shift and go to state 118
    nulValue                       shift and go to state 30

state 97

    (75) estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN . LLAVEABRE bloque LLAVECIERRA

    LLAVEABRE       shift and go to state 119


state 98

    (76) estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA . comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (79) comparacionVacio -> . comparacion
    (80) comparacionVacio -> . booleano
    (81) comparacionVacio -> . empty
    (36) comparacion -> . valores comparador valores
    (37) comparacion -> . comparacion comparador valores
    (38) comparacion -> . valores IS tipoDato
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE
    (89) empty -> .
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano

    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63

    comparacionVacio               shift and go to state 120
    comparacion                    shift and go to state 121
    booleano                       shift and go to state 122
    empty                          shift and go to state 123
    valores                        shift and go to state 74

state 99

    (91) doWhile -> DO LLAVEABRE bloque LLAVECIERRA . WHILE LPAREN argumentoEstructura RPAREN

    WHILE           shift and go to state 124


state 100

    (45) mapaFunciones -> mapa PUNTO VARIABLE LPAREN RPAREN .

    PUNTOCOMA       reduce using rule 45 (mapaFunciones -> mapa PUNTO VARIABLE LPAREN RPAREN .)
    PUNTO           reduce using rule 45 (mapaFunciones -> mapa PUNTO VARIABLE LPAREN RPAREN .)


state 101

    (46) mapaFunciones -> mapa PUNTO VARIABLE LPAREN valores .

    PUNTOCOMA       reduce using rule 46 (mapaFunciones -> mapa PUNTO VARIABLE LPAREN valores .)
    PUNTO           reduce using rule 46 (mapaFunciones -> mapa PUNTO VARIABLE LPAREN valores .)


state 102

    (74) estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .

    ELSE            reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    MAP             reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    VARIABLE        reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    BOOL            reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    IMPORT          reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    EXPORT          reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    IF              reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    WHILE           reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    FOR             reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    DO              reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    STRING          reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    INT             reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    DOUBLE          reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    DYNAMIC         reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    VAR             reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    NULL            reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    $end            reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    PUNTOCOMA       reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)
    LLAVECIERRA     reduce using rule 74 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA .)


state 103

    (73) estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .

    ELSE            reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    MAP             reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    VARIABLE        reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    BOOL            reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    IMPORT          reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    EXPORT          reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    IF              reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    WHILE           reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    FOR             reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    DO              reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    STRING          reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    INT             reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    DOUBLE          reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    DYNAMIC         reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    VAR             reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    NULL            reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    $end            reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    PUNTOCOMA       reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)
    LLAVECIERRA     reduce using rule 73 (estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA .)


state 104

    (43) mapa -> MAP MENORQUE tipoDato COMA tipoDato . MAYORQUE VARIABLE IGUAL creacionMapa

    MAYORQUE        shift and go to state 125


state 105

    (25) operacion_aritmetica -> valores operadores_aritmeticos . valores
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    valores                        shift and go to state 126
    booleano                       shift and go to state 64

state 106

    (27) operadores_aritmeticos -> SUMA .

    VARIABLE        reduce using rule 27 (operadores_aritmeticos -> SUMA .)
    NUMERO          reduce using rule 27 (operadores_aritmeticos -> SUMA .)
    CADENA          reduce using rule 27 (operadores_aritmeticos -> SUMA .)
    TRUE            reduce using rule 27 (operadores_aritmeticos -> SUMA .)
    FALSE           reduce using rule 27 (operadores_aritmeticos -> SUMA .)


state 107

    (28) operadores_aritmeticos -> RESTA .

    VARIABLE        reduce using rule 28 (operadores_aritmeticos -> RESTA .)
    NUMERO          reduce using rule 28 (operadores_aritmeticos -> RESTA .)
    CADENA          reduce using rule 28 (operadores_aritmeticos -> RESTA .)
    TRUE            reduce using rule 28 (operadores_aritmeticos -> RESTA .)
    FALSE           reduce using rule 28 (operadores_aritmeticos -> RESTA .)


state 108

    (29) operadores_aritmeticos -> MULTIPLICACION .

    VARIABLE        reduce using rule 29 (operadores_aritmeticos -> MULTIPLICACION .)
    NUMERO          reduce using rule 29 (operadores_aritmeticos -> MULTIPLICACION .)
    CADENA          reduce using rule 29 (operadores_aritmeticos -> MULTIPLICACION .)
    TRUE            reduce using rule 29 (operadores_aritmeticos -> MULTIPLICACION .)
    FALSE           reduce using rule 29 (operadores_aritmeticos -> MULTIPLICACION .)


state 109

    (30) operadores_aritmeticos -> DIVISION .

    VARIABLE        reduce using rule 30 (operadores_aritmeticos -> DIVISION .)
    NUMERO          reduce using rule 30 (operadores_aritmeticos -> DIVISION .)
    CADENA          reduce using rule 30 (operadores_aritmeticos -> DIVISION .)
    TRUE            reduce using rule 30 (operadores_aritmeticos -> DIVISION .)
    FALSE           reduce using rule 30 (operadores_aritmeticos -> DIVISION .)


state 110

    (31) operadores_aritmeticos -> DIVENTERA .

    VARIABLE        reduce using rule 31 (operadores_aritmeticos -> DIVENTERA .)
    NUMERO          reduce using rule 31 (operadores_aritmeticos -> DIVENTERA .)
    CADENA          reduce using rule 31 (operadores_aritmeticos -> DIVENTERA .)
    TRUE            reduce using rule 31 (operadores_aritmeticos -> DIVENTERA .)
    FALSE           reduce using rule 31 (operadores_aritmeticos -> DIVENTERA .)


state 111

    (32) operadores_aritmeticos -> RESIDUO .

    VARIABLE        reduce using rule 32 (operadores_aritmeticos -> RESIDUO .)
    NUMERO          reduce using rule 32 (operadores_aritmeticos -> RESIDUO .)
    CADENA          reduce using rule 32 (operadores_aritmeticos -> RESIDUO .)
    TRUE            reduce using rule 32 (operadores_aritmeticos -> RESIDUO .)
    FALSE           reduce using rule 32 (operadores_aritmeticos -> RESIDUO .)


state 112

    (26) operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos . valores
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    valores                        shift and go to state 127
    booleano                       shift and go to state 64

state 113

    (47) mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN RPAREN .

    PUNTOCOMA       reduce using rule 47 (mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN RPAREN .)
    PUNTO           reduce using rule 47 (mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN RPAREN .)


state 114

    (48) mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN valores . RPAREN

    RPAREN          shift and go to state 128


state 115

    (70) estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE . bloque LLAVECIERRA
    (71) estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE . estructuraIf LLAVECIERRA
    (1) bloque -> . expresion
    (2) bloque -> . bloque expresion
    (3) bloque -> . empty
    (4) bloque -> . estructuras
    (5) bloque -> . bloque estructuras
    (70) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
    (72) estructuraIf -> . estructuraIfElse
    (13) expresion -> . mapa PUNTOCOMA
    (14) expresion -> . mapaFunciones PUNTOCOMA
    (15) expresion -> . asignacion PUNTOCOMA
    (16) expresion -> . import
    (17) expresion -> . export
    (89) empty -> .
    (66) estructuras -> . estructuraIf
    (67) estructuras -> . estructuraWhile
    (68) estructuras -> . estructuraFor
    (69) estructuras -> . doWhile
    (73) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA
    (43) mapa -> . MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (44) mapa -> . mapaFunciones
    (45) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN valores
    (47) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN valores RPAREN
    (20) asignacion -> . VARIABLE operadores_asignacion valores
    (21) asignacion -> . tipoDato VARIABLE IGUAL valores
    (22) asignacion -> . BOOL VARIABLE IGUAL comparacion
    (23) asignacion -> . tipoDato VARIABLE IGUAL operacion_aritmetica
    (24) asignacion -> . empty
    (18) import -> . IMPORT CADENA PUNTOCOMA
    (19) export -> . EXPORT CADENA PUNTOCOMA
    (75) estructuraWhile -> . WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (76) estructuraFor -> . FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (91) doWhile -> . DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (90) nulValue -> . NULL

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for EXPORT resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    IF              shift and go to state 20
    LLAVECIERRA     reduce using rule 89 (empty -> .)
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    MAP             shift and go to state 14
    VARIABLE        shift and go to state 16
    BOOL            shift and go to state 17
    IMPORT          shift and go to state 18
    EXPORT          shift and go to state 19
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    DO              shift and go to state 24
    STRING          shift and go to state 25
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    NULL            shift and go to state 31

  ! MAP             [ reduce using rule 89 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 89 (empty -> .) ]
  ! BOOL            [ reduce using rule 89 (empty -> .) ]
  ! IMPORT          [ reduce using rule 89 (empty -> .) ]
  ! EXPORT          [ reduce using rule 89 (empty -> .) ]
  ! IF              [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]
  ! FOR             [ reduce using rule 89 (empty -> .) ]
  ! DO              [ reduce using rule 89 (empty -> .) ]
  ! STRING          [ reduce using rule 89 (empty -> .) ]
  ! INT             [ reduce using rule 89 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 89 (empty -> .) ]
  ! DYNAMIC         [ reduce using rule 89 (empty -> .) ]
  ! VAR             [ reduce using rule 89 (empty -> .) ]
  ! NULL            [ reduce using rule 89 (empty -> .) ]

    bloque                         shift and go to state 129
    estructuraIf                   shift and go to state 130
    expresion                      shift and go to state 2
    empty                          shift and go to state 3
    estructuras                    shift and go to state 4
    estructuraIfElse               shift and go to state 21
    mapa                           shift and go to state 5
    mapaFunciones                  shift and go to state 6
    asignacion                     shift and go to state 7
    import                         shift and go to state 8
    export                         shift and go to state 9
    estructuraWhile                shift and go to state 11
    estructuraFor                  shift and go to state 12
    doWhile                        shift and go to state 13
    tipoDato                       shift and go to state 15
    nulValue                       shift and go to state 30

state 116

    (37) comparacion -> comparacion comparador valores .

    MENORQUE        reduce using rule 37 (comparacion -> comparacion comparador valores .)
    MAYORQUE        reduce using rule 37 (comparacion -> comparacion comparador valores .)
    IGUALQUE        reduce using rule 37 (comparacion -> comparacion comparador valores .)
    DIFERENTEQUE    reduce using rule 37 (comparacion -> comparacion comparador valores .)
    RPAREN          reduce using rule 37 (comparacion -> comparacion comparador valores .)
    PUNTOCOMA       reduce using rule 37 (comparacion -> comparacion comparador valores .)


state 117

    (36) comparacion -> valores comparador valores .

    MENORQUE        reduce using rule 36 (comparacion -> valores comparador valores .)
    MAYORQUE        reduce using rule 36 (comparacion -> valores comparador valores .)
    IGUALQUE        reduce using rule 36 (comparacion -> valores comparador valores .)
    DIFERENTEQUE    reduce using rule 36 (comparacion -> valores comparador valores .)
    RPAREN          reduce using rule 36 (comparacion -> valores comparador valores .)
    PUNTOCOMA       reduce using rule 36 (comparacion -> valores comparador valores .)


state 118

    (38) comparacion -> valores IS tipoDato .

    MENORQUE        reduce using rule 38 (comparacion -> valores IS tipoDato .)
    MAYORQUE        reduce using rule 38 (comparacion -> valores IS tipoDato .)
    IGUALQUE        reduce using rule 38 (comparacion -> valores IS tipoDato .)
    DIFERENTEQUE    reduce using rule 38 (comparacion -> valores IS tipoDato .)
    RPAREN          reduce using rule 38 (comparacion -> valores IS tipoDato .)
    PUNTOCOMA       reduce using rule 38 (comparacion -> valores IS tipoDato .)


state 119

    (75) estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE . bloque LLAVECIERRA
    (1) bloque -> . expresion
    (2) bloque -> . bloque expresion
    (3) bloque -> . empty
    (4) bloque -> . estructuras
    (5) bloque -> . bloque estructuras
    (13) expresion -> . mapa PUNTOCOMA
    (14) expresion -> . mapaFunciones PUNTOCOMA
    (15) expresion -> . asignacion PUNTOCOMA
    (16) expresion -> . import
    (17) expresion -> . export
    (89) empty -> .
    (66) estructuras -> . estructuraIf
    (67) estructuras -> . estructuraWhile
    (68) estructuras -> . estructuraFor
    (69) estructuras -> . doWhile
    (43) mapa -> . MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (44) mapa -> . mapaFunciones
    (45) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN valores
    (47) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN valores RPAREN
    (20) asignacion -> . VARIABLE operadores_asignacion valores
    (21) asignacion -> . tipoDato VARIABLE IGUAL valores
    (22) asignacion -> . BOOL VARIABLE IGUAL comparacion
    (23) asignacion -> . tipoDato VARIABLE IGUAL operacion_aritmetica
    (24) asignacion -> . empty
    (18) import -> . IMPORT CADENA PUNTOCOMA
    (19) export -> . EXPORT CADENA PUNTOCOMA
    (70) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
    (72) estructuraIf -> . estructuraIfElse
    (75) estructuraWhile -> . WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (76) estructuraFor -> . FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (91) doWhile -> . DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (73) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA
    (90) nulValue -> . NULL

  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for EXPORT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    LLAVECIERRA     reduce using rule 89 (empty -> .)
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    MAP             shift and go to state 14
    VARIABLE        shift and go to state 16
    BOOL            shift and go to state 17
    IMPORT          shift and go to state 18
    EXPORT          shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    DO              shift and go to state 24
    STRING          shift and go to state 25
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    NULL            shift and go to state 31

  ! MAP             [ reduce using rule 89 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 89 (empty -> .) ]
  ! BOOL            [ reduce using rule 89 (empty -> .) ]
  ! IMPORT          [ reduce using rule 89 (empty -> .) ]
  ! EXPORT          [ reduce using rule 89 (empty -> .) ]
  ! IF              [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]
  ! FOR             [ reduce using rule 89 (empty -> .) ]
  ! DO              [ reduce using rule 89 (empty -> .) ]
  ! STRING          [ reduce using rule 89 (empty -> .) ]
  ! INT             [ reduce using rule 89 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 89 (empty -> .) ]
  ! DYNAMIC         [ reduce using rule 89 (empty -> .) ]
  ! VAR             [ reduce using rule 89 (empty -> .) ]
  ! NULL            [ reduce using rule 89 (empty -> .) ]

    bloque                         shift and go to state 131
    expresion                      shift and go to state 2
    empty                          shift and go to state 3
    estructuras                    shift and go to state 4
    mapa                           shift and go to state 5
    mapaFunciones                  shift and go to state 6
    asignacion                     shift and go to state 7
    import                         shift and go to state 8
    export                         shift and go to state 9
    estructuraIf                   shift and go to state 10
    estructuraWhile                shift and go to state 11
    estructuraFor                  shift and go to state 12
    doWhile                        shift and go to state 13
    tipoDato                       shift and go to state 15
    estructuraIfElse               shift and go to state 21
    nulValue                       shift and go to state 30

state 120

    (76) estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio . PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA

    PUNTOCOMA       shift and go to state 132


state 121

    (79) comparacionVacio -> comparacion .
    (37) comparacion -> comparacion . comparador valores
    (39) comparador -> . MENORQUE
    (40) comparador -> . MAYORQUE
    (41) comparador -> . IGUALQUE
    (42) comparador -> . DIFERENTEQUE

    PUNTOCOMA       reduce using rule 79 (comparacionVacio -> comparacion .)
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    IGUALQUE        shift and go to state 93
    DIFERENTEQUE    shift and go to state 94

    comparador                     shift and go to state 90

state 122

    (80) comparacionVacio -> booleano .
    (56) valores -> booleano .

    PUNTOCOMA       reduce using rule 80 (comparacionVacio -> booleano .)
    IS              reduce using rule 56 (valores -> booleano .)
    MENORQUE        reduce using rule 56 (valores -> booleano .)
    MAYORQUE        reduce using rule 56 (valores -> booleano .)
    IGUALQUE        reduce using rule 56 (valores -> booleano .)
    DIFERENTEQUE    reduce using rule 56 (valores -> booleano .)


state 123

    (81) comparacionVacio -> empty .

    PUNTOCOMA       reduce using rule 81 (comparacionVacio -> empty .)


state 124

    (91) doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE . LPAREN argumentoEstructura RPAREN

    LPAREN          shift and go to state 133


state 125

    (43) mapa -> MAP MENORQUE tipoDato COMA tipoDato MAYORQUE . VARIABLE IGUAL creacionMapa

    VARIABLE        shift and go to state 134


state 126

    (25) operacion_aritmetica -> valores operadores_aritmeticos valores .

    SUMA            reduce using rule 25 (operacion_aritmetica -> valores operadores_aritmeticos valores .)
    RESTA           reduce using rule 25 (operacion_aritmetica -> valores operadores_aritmeticos valores .)
    MULTIPLICACION  reduce using rule 25 (operacion_aritmetica -> valores operadores_aritmeticos valores .)
    DIVISION        reduce using rule 25 (operacion_aritmetica -> valores operadores_aritmeticos valores .)
    DIVENTERA       reduce using rule 25 (operacion_aritmetica -> valores operadores_aritmeticos valores .)
    RESIDUO         reduce using rule 25 (operacion_aritmetica -> valores operadores_aritmeticos valores .)
    PUNTOCOMA       reduce using rule 25 (operacion_aritmetica -> valores operadores_aritmeticos valores .)
    RPAREN          reduce using rule 25 (operacion_aritmetica -> valores operadores_aritmeticos valores .)


state 127

    (26) operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos valores .

    SUMA            reduce using rule 26 (operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos valores .)
    RESTA           reduce using rule 26 (operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos valores .)
    MULTIPLICACION  reduce using rule 26 (operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos valores .)
    DIVISION        reduce using rule 26 (operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos valores .)
    DIVENTERA       reduce using rule 26 (operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos valores .)
    RESIDUO         reduce using rule 26 (operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos valores .)
    PUNTOCOMA       reduce using rule 26 (operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos valores .)
    RPAREN          reduce using rule 26 (operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos valores .)


state 128

    (48) mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN valores RPAREN .

    PUNTOCOMA       reduce using rule 48 (mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN valores RPAREN .)
    PUNTO           reduce using rule 48 (mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN valores RPAREN .)


state 129

    (70) estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque . LLAVECIERRA
    (2) bloque -> bloque . expresion
    (5) bloque -> bloque . estructuras
    (13) expresion -> . mapa PUNTOCOMA
    (14) expresion -> . mapaFunciones PUNTOCOMA
    (15) expresion -> . asignacion PUNTOCOMA
    (16) expresion -> . import
    (17) expresion -> . export
    (66) estructuras -> . estructuraIf
    (67) estructuras -> . estructuraWhile
    (68) estructuras -> . estructuraFor
    (69) estructuras -> . doWhile
    (43) mapa -> . MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (44) mapa -> . mapaFunciones
    (45) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN valores
    (47) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN valores RPAREN
    (20) asignacion -> . VARIABLE operadores_asignacion valores
    (21) asignacion -> . tipoDato VARIABLE IGUAL valores
    (22) asignacion -> . BOOL VARIABLE IGUAL comparacion
    (23) asignacion -> . tipoDato VARIABLE IGUAL operacion_aritmetica
    (24) asignacion -> . empty
    (18) import -> . IMPORT CADENA PUNTOCOMA
    (19) export -> . EXPORT CADENA PUNTOCOMA
    (70) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
    (72) estructuraIf -> . estructuraIfElse
    (75) estructuraWhile -> . WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (76) estructuraFor -> . FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (91) doWhile -> . DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (89) empty -> .
    (73) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA
    (90) nulValue -> . NULL

    LLAVECIERRA     shift and go to state 135
    MAP             shift and go to state 14
    VARIABLE        shift and go to state 16
    BOOL            shift and go to state 17
    IMPORT          shift and go to state 18
    EXPORT          shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    DO              shift and go to state 24
    STRING          shift and go to state 25
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    NULL            shift and go to state 31

    expresion                      shift and go to state 32
    estructuras                    shift and go to state 33
    mapa                           shift and go to state 5
    mapaFunciones                  shift and go to state 6
    asignacion                     shift and go to state 7
    import                         shift and go to state 8
    export                         shift and go to state 9
    estructuraIf                   shift and go to state 10
    estructuraWhile                shift and go to state 11
    estructuraFor                  shift and go to state 12
    doWhile                        shift and go to state 13
    tipoDato                       shift and go to state 15
    empty                          shift and go to state 34
    estructuraIfElse               shift and go to state 21
    nulValue                       shift and go to state 30

state 130

    (71) estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf . LLAVECIERRA
    (66) estructuras -> estructuraIf .
    (73) estructuraIfElse -> estructuraIf . ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> estructuraIf . ELSE LLAVEABRE estructuraIf LLAVECIERRA

  ! shift/reduce conflict for LLAVECIERRA resolved as shift
    LLAVECIERRA     shift and go to state 136
    MAP             reduce using rule 66 (estructuras -> estructuraIf .)
    VARIABLE        reduce using rule 66 (estructuras -> estructuraIf .)
    BOOL            reduce using rule 66 (estructuras -> estructuraIf .)
    IMPORT          reduce using rule 66 (estructuras -> estructuraIf .)
    EXPORT          reduce using rule 66 (estructuras -> estructuraIf .)
    IF              reduce using rule 66 (estructuras -> estructuraIf .)
    WHILE           reduce using rule 66 (estructuras -> estructuraIf .)
    FOR             reduce using rule 66 (estructuras -> estructuraIf .)
    DO              reduce using rule 66 (estructuras -> estructuraIf .)
    STRING          reduce using rule 66 (estructuras -> estructuraIf .)
    INT             reduce using rule 66 (estructuras -> estructuraIf .)
    DOUBLE          reduce using rule 66 (estructuras -> estructuraIf .)
    DYNAMIC         reduce using rule 66 (estructuras -> estructuraIf .)
    VAR             reduce using rule 66 (estructuras -> estructuraIf .)
    NULL            reduce using rule 66 (estructuras -> estructuraIf .)
    PUNTOCOMA       reduce using rule 66 (estructuras -> estructuraIf .)
    ELSE            shift and go to state 39

  ! LLAVECIERRA     [ reduce using rule 66 (estructuras -> estructuraIf .) ]


state 131

    (75) estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque . LLAVECIERRA
    (2) bloque -> bloque . expresion
    (5) bloque -> bloque . estructuras
    (13) expresion -> . mapa PUNTOCOMA
    (14) expresion -> . mapaFunciones PUNTOCOMA
    (15) expresion -> . asignacion PUNTOCOMA
    (16) expresion -> . import
    (17) expresion -> . export
    (66) estructuras -> . estructuraIf
    (67) estructuras -> . estructuraWhile
    (68) estructuras -> . estructuraFor
    (69) estructuras -> . doWhile
    (43) mapa -> . MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (44) mapa -> . mapaFunciones
    (45) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN valores
    (47) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN valores RPAREN
    (20) asignacion -> . VARIABLE operadores_asignacion valores
    (21) asignacion -> . tipoDato VARIABLE IGUAL valores
    (22) asignacion -> . BOOL VARIABLE IGUAL comparacion
    (23) asignacion -> . tipoDato VARIABLE IGUAL operacion_aritmetica
    (24) asignacion -> . empty
    (18) import -> . IMPORT CADENA PUNTOCOMA
    (19) export -> . EXPORT CADENA PUNTOCOMA
    (70) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
    (72) estructuraIf -> . estructuraIfElse
    (75) estructuraWhile -> . WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (76) estructuraFor -> . FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (91) doWhile -> . DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (89) empty -> .
    (73) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA
    (90) nulValue -> . NULL

    LLAVECIERRA     shift and go to state 137
    MAP             shift and go to state 14
    VARIABLE        shift and go to state 16
    BOOL            shift and go to state 17
    IMPORT          shift and go to state 18
    EXPORT          shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    DO              shift and go to state 24
    STRING          shift and go to state 25
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    NULL            shift and go to state 31

    expresion                      shift and go to state 32
    estructuras                    shift and go to state 33
    mapa                           shift and go to state 5
    mapaFunciones                  shift and go to state 6
    asignacion                     shift and go to state 7
    import                         shift and go to state 8
    export                         shift and go to state 9
    estructuraIf                   shift and go to state 10
    estructuraWhile                shift and go to state 11
    estructuraFor                  shift and go to state 12
    doWhile                        shift and go to state 13
    tipoDato                       shift and go to state 15
    empty                          shift and go to state 34
    estructuraIfElse               shift and go to state 21
    nulValue                       shift and go to state 30

state 132

    (76) estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA . aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (82) aumento -> . VARIABLE IGUAL operacion_aritmetica
    (83) aumento -> . VARIABLE operadores_asignacion NUMERO
    (84) aumento -> . VARIABLE operadores_asignacion VARIABLE
    (85) aumento -> . empty
    (89) empty -> .

    VARIABLE        shift and go to state 139
    RPAREN          reduce using rule 89 (empty -> .)

    aumento                        shift and go to state 138
    empty                          shift and go to state 140

state 133

    (91) doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN . argumentoEstructura RPAREN
    (86) argumentoEstructura -> . VARIABLE
    (87) argumentoEstructura -> . booleano
    (88) argumentoEstructura -> . comparacion
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE
    (36) comparacion -> . valores comparador valores
    (37) comparacion -> . comparacion comparador valores
    (38) comparacion -> . valores IS tipoDato
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano

    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63

    argumentoEstructura            shift and go to state 141
    booleano                       shift and go to state 72
    comparacion                    shift and go to state 73
    valores                        shift and go to state 74

state 134

    (43) mapa -> MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE . IGUAL creacionMapa

    IGUAL           shift and go to state 142


state 135

    (70) estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .

    ELSE            reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    MAP             reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    VARIABLE        reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    BOOL            reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    IMPORT          reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    EXPORT          reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    IF              reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    WHILE           reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    FOR             reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    DO              reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    STRING          reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    INT             reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    DOUBLE          reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    DYNAMIC         reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    VAR             reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    NULL            reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    $end            reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    PUNTOCOMA       reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    LLAVECIERRA     reduce using rule 70 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)


state 136

    (71) estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .

    ELSE            reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    MAP             reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    VARIABLE        reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    BOOL            reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    IMPORT          reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    EXPORT          reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    IF              reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    WHILE           reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    FOR             reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    DO              reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    STRING          reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    INT             reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    DOUBLE          reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    DYNAMIC         reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    VAR             reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    NULL            reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    $end            reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    PUNTOCOMA       reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)
    LLAVECIERRA     reduce using rule 71 (estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA .)


state 137

    (75) estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .

    MAP             reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    VARIABLE        reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    BOOL            reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    IMPORT          reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    EXPORT          reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    IF              reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    WHILE           reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    FOR             reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    DO              reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    STRING          reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    INT             reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    DOUBLE          reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    DYNAMIC         reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    VAR             reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    NULL            reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    $end            reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    PUNTOCOMA       reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)
    LLAVECIERRA     reduce using rule 75 (estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA .)


state 138

    (76) estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento . RPAREN LLAVEABRE bloque LLAVECIERRA

    RPAREN          shift and go to state 143


state 139

    (82) aumento -> VARIABLE . IGUAL operacion_aritmetica
    (83) aumento -> VARIABLE . operadores_asignacion NUMERO
    (84) aumento -> VARIABLE . operadores_asignacion VARIABLE
    (33) operadores_asignacion -> . IGUAL
    (34) operadores_asignacion -> . ASIGNACIONAUMENTADA
    (35) operadores_asignacion -> . ASIGNACIONDISMINUIDA

    IGUAL           shift and go to state 144
    ASIGNACIONAUMENTADA shift and go to state 45
    ASIGNACIONDISMINUIDA shift and go to state 46

    operadores_asignacion          shift and go to state 145

state 140

    (85) aumento -> empty .

    RPAREN          reduce using rule 85 (aumento -> empty .)


state 141

    (91) doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura . RPAREN

    RPAREN          shift and go to state 146


state 142

    (43) mapa -> MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL . creacionMapa
    (49) creacionMapa -> . LLAVEABRE paresClaveValor LLAVECIERRA
    (50) creacionMapa -> . VARIABLE

    LLAVEABRE       shift and go to state 149
    VARIABLE        shift and go to state 147

    creacionMapa                   shift and go to state 148

state 143

    (76) estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN . LLAVEABRE bloque LLAVECIERRA

    LLAVEABRE       shift and go to state 150


state 144

    (82) aumento -> VARIABLE IGUAL . operacion_aritmetica
    (33) operadores_asignacion -> IGUAL .
    (25) operacion_aritmetica -> . valores operadores_aritmeticos valores
    (26) operacion_aritmetica -> . operacion_aritmetica operadores_aritmeticos valores
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

  ! NUMERO          [ reduce using rule 33 (operadores_asignacion -> IGUAL .) ]
  ! VARIABLE        [ reduce using rule 33 (operadores_asignacion -> IGUAL .) ]

    operacion_aritmetica           shift and go to state 151
    valores                        shift and go to state 152
    booleano                       shift and go to state 64

state 145

    (83) aumento -> VARIABLE operadores_asignacion . NUMERO
    (84) aumento -> VARIABLE operadores_asignacion . VARIABLE

    NUMERO          shift and go to state 154
    VARIABLE        shift and go to state 153


state 146

    (91) doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .

    MAP             reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    VARIABLE        reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    BOOL            reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    IMPORT          reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    EXPORT          reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    IF              reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    WHILE           reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    FOR             reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    DO              reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    STRING          reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    INT             reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    DOUBLE          reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    DYNAMIC         reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    VAR             reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    NULL            reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    $end            reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    PUNTOCOMA       reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)
    LLAVECIERRA     reduce using rule 91 (doWhile -> DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN .)


state 147

    (50) creacionMapa -> VARIABLE .

    PUNTOCOMA       reduce using rule 50 (creacionMapa -> VARIABLE .)
    PUNTO           reduce using rule 50 (creacionMapa -> VARIABLE .)


state 148

    (43) mapa -> MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa .

    PUNTOCOMA       reduce using rule 43 (mapa -> MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa .)
    PUNTO           reduce using rule 43 (mapa -> MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa .)


state 149

    (49) creacionMapa -> LLAVEABRE . paresClaveValor LLAVECIERRA
    (51) paresClaveValor -> . valores DOSPUNTOS valores
    (52) paresClaveValor -> . paresClaveValor COMA valores DOSPUNTOS valores
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    paresClaveValor                shift and go to state 155
    valores                        shift and go to state 156
    booleano                       shift and go to state 64

state 150

    (76) estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE . bloque LLAVECIERRA
    (1) bloque -> . expresion
    (2) bloque -> . bloque expresion
    (3) bloque -> . empty
    (4) bloque -> . estructuras
    (5) bloque -> . bloque estructuras
    (13) expresion -> . mapa PUNTOCOMA
    (14) expresion -> . mapaFunciones PUNTOCOMA
    (15) expresion -> . asignacion PUNTOCOMA
    (16) expresion -> . import
    (17) expresion -> . export
    (89) empty -> .
    (66) estructuras -> . estructuraIf
    (67) estructuras -> . estructuraWhile
    (68) estructuras -> . estructuraFor
    (69) estructuras -> . doWhile
    (43) mapa -> . MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (44) mapa -> . mapaFunciones
    (45) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN valores
    (47) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN valores RPAREN
    (20) asignacion -> . VARIABLE operadores_asignacion valores
    (21) asignacion -> . tipoDato VARIABLE IGUAL valores
    (22) asignacion -> . BOOL VARIABLE IGUAL comparacion
    (23) asignacion -> . tipoDato VARIABLE IGUAL operacion_aritmetica
    (24) asignacion -> . empty
    (18) import -> . IMPORT CADENA PUNTOCOMA
    (19) export -> . EXPORT CADENA PUNTOCOMA
    (70) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
    (72) estructuraIf -> . estructuraIfElse
    (75) estructuraWhile -> . WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (76) estructuraFor -> . FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (91) doWhile -> . DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (73) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA
    (90) nulValue -> . NULL

  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for EXPORT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    LLAVECIERRA     reduce using rule 89 (empty -> .)
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    MAP             shift and go to state 14
    VARIABLE        shift and go to state 16
    BOOL            shift and go to state 17
    IMPORT          shift and go to state 18
    EXPORT          shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    DO              shift and go to state 24
    STRING          shift and go to state 25
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    NULL            shift and go to state 31

  ! MAP             [ reduce using rule 89 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 89 (empty -> .) ]
  ! BOOL            [ reduce using rule 89 (empty -> .) ]
  ! IMPORT          [ reduce using rule 89 (empty -> .) ]
  ! EXPORT          [ reduce using rule 89 (empty -> .) ]
  ! IF              [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]
  ! FOR             [ reduce using rule 89 (empty -> .) ]
  ! DO              [ reduce using rule 89 (empty -> .) ]
  ! STRING          [ reduce using rule 89 (empty -> .) ]
  ! INT             [ reduce using rule 89 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 89 (empty -> .) ]
  ! DYNAMIC         [ reduce using rule 89 (empty -> .) ]
  ! VAR             [ reduce using rule 89 (empty -> .) ]
  ! NULL            [ reduce using rule 89 (empty -> .) ]

    bloque                         shift and go to state 157
    expresion                      shift and go to state 2
    empty                          shift and go to state 3
    estructuras                    shift and go to state 4
    mapa                           shift and go to state 5
    mapaFunciones                  shift and go to state 6
    asignacion                     shift and go to state 7
    import                         shift and go to state 8
    export                         shift and go to state 9
    estructuraIf                   shift and go to state 10
    estructuraWhile                shift and go to state 11
    estructuraFor                  shift and go to state 12
    doWhile                        shift and go to state 13
    tipoDato                       shift and go to state 15
    estructuraIfElse               shift and go to state 21
    nulValue                       shift and go to state 30

state 151

    (82) aumento -> VARIABLE IGUAL operacion_aritmetica .
    (26) operacion_aritmetica -> operacion_aritmetica . operadores_aritmeticos valores
    (27) operadores_aritmeticos -> . SUMA
    (28) operadores_aritmeticos -> . RESTA
    (29) operadores_aritmeticos -> . MULTIPLICACION
    (30) operadores_aritmeticos -> . DIVISION
    (31) operadores_aritmeticos -> . DIVENTERA
    (32) operadores_aritmeticos -> . RESIDUO

    RPAREN          reduce using rule 82 (aumento -> VARIABLE IGUAL operacion_aritmetica .)
    SUMA            shift and go to state 106
    RESTA           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    DIVENTERA       shift and go to state 110
    RESIDUO         shift and go to state 111

    operadores_aritmeticos         shift and go to state 112

state 152

    (25) operacion_aritmetica -> valores . operadores_aritmeticos valores
    (27) operadores_aritmeticos -> . SUMA
    (28) operadores_aritmeticos -> . RESTA
    (29) operadores_aritmeticos -> . MULTIPLICACION
    (30) operadores_aritmeticos -> . DIVISION
    (31) operadores_aritmeticos -> . DIVENTERA
    (32) operadores_aritmeticos -> . RESIDUO

    SUMA            shift and go to state 106
    RESTA           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    DIVENTERA       shift and go to state 110
    RESIDUO         shift and go to state 111

    operadores_aritmeticos         shift and go to state 105

state 153

    (84) aumento -> VARIABLE operadores_asignacion VARIABLE .

    RPAREN          reduce using rule 84 (aumento -> VARIABLE operadores_asignacion VARIABLE .)


state 154

    (83) aumento -> VARIABLE operadores_asignacion NUMERO .

    RPAREN          reduce using rule 83 (aumento -> VARIABLE operadores_asignacion NUMERO .)


state 155

    (49) creacionMapa -> LLAVEABRE paresClaveValor . LLAVECIERRA
    (52) paresClaveValor -> paresClaveValor . COMA valores DOSPUNTOS valores

    LLAVECIERRA     shift and go to state 158
    COMA            shift and go to state 159


state 156

    (51) paresClaveValor -> valores . DOSPUNTOS valores

    DOSPUNTOS       shift and go to state 160


state 157

    (76) estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque . LLAVECIERRA
    (2) bloque -> bloque . expresion
    (5) bloque -> bloque . estructuras
    (13) expresion -> . mapa PUNTOCOMA
    (14) expresion -> . mapaFunciones PUNTOCOMA
    (15) expresion -> . asignacion PUNTOCOMA
    (16) expresion -> . import
    (17) expresion -> . export
    (66) estructuras -> . estructuraIf
    (67) estructuras -> . estructuraWhile
    (68) estructuras -> . estructuraFor
    (69) estructuras -> . doWhile
    (43) mapa -> . MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa
    (44) mapa -> . mapaFunciones
    (45) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN RPAREN
    (46) mapaFunciones -> . mapa PUNTO VARIABLE LPAREN valores
    (47) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN RPAREN
    (48) mapaFunciones -> . VARIABLE PUNTO VARIABLE LPAREN valores RPAREN
    (20) asignacion -> . VARIABLE operadores_asignacion valores
    (21) asignacion -> . tipoDato VARIABLE IGUAL valores
    (22) asignacion -> . BOOL VARIABLE IGUAL comparacion
    (23) asignacion -> . tipoDato VARIABLE IGUAL operacion_aritmetica
    (24) asignacion -> . empty
    (18) import -> . IMPORT CADENA PUNTOCOMA
    (19) export -> . EXPORT CADENA PUNTOCOMA
    (70) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (71) estructuraIf -> . IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA
    (72) estructuraIf -> . estructuraIfElse
    (75) estructuraWhile -> . WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA
    (76) estructuraFor -> . FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA
    (91) doWhile -> . DO LLAVEABRE bloque LLAVECIERRA WHILE LPAREN argumentoEstructura RPAREN
    (59) tipoDato -> . STRING
    (60) tipoDato -> . INT
    (61) tipoDato -> . BOOL
    (62) tipoDato -> . DOUBLE
    (63) tipoDato -> . DYNAMIC
    (64) tipoDato -> . VAR
    (65) tipoDato -> . nulValue
    (89) empty -> .
    (73) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA
    (74) estructuraIfElse -> . estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA
    (90) nulValue -> . NULL

    LLAVECIERRA     shift and go to state 161
    MAP             shift and go to state 14
    VARIABLE        shift and go to state 16
    BOOL            shift and go to state 17
    IMPORT          shift and go to state 18
    EXPORT          shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    DO              shift and go to state 24
    STRING          shift and go to state 25
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    PUNTOCOMA       reduce using rule 89 (empty -> .)
    NULL            shift and go to state 31

    expresion                      shift and go to state 32
    estructuras                    shift and go to state 33
    mapa                           shift and go to state 5
    mapaFunciones                  shift and go to state 6
    asignacion                     shift and go to state 7
    import                         shift and go to state 8
    export                         shift and go to state 9
    estructuraIf                   shift and go to state 10
    estructuraWhile                shift and go to state 11
    estructuraFor                  shift and go to state 12
    doWhile                        shift and go to state 13
    tipoDato                       shift and go to state 15
    empty                          shift and go to state 34
    estructuraIfElse               shift and go to state 21
    nulValue                       shift and go to state 30

state 158

    (49) creacionMapa -> LLAVEABRE paresClaveValor LLAVECIERRA .

    PUNTOCOMA       reduce using rule 49 (creacionMapa -> LLAVEABRE paresClaveValor LLAVECIERRA .)
    PUNTO           reduce using rule 49 (creacionMapa -> LLAVEABRE paresClaveValor LLAVECIERRA .)


state 159

    (52) paresClaveValor -> paresClaveValor COMA . valores DOSPUNTOS valores
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    valores                        shift and go to state 162
    booleano                       shift and go to state 64

state 160

    (51) paresClaveValor -> valores DOSPUNTOS . valores
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    valores                        shift and go to state 163
    booleano                       shift and go to state 64

state 161

    (76) estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .

    MAP             reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    VARIABLE        reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    BOOL            reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    IMPORT          reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    EXPORT          reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    IF              reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    WHILE           reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    FOR             reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    DO              reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    STRING          reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    INT             reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    DOUBLE          reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    DYNAMIC         reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    VAR             reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    NULL            reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    $end            reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    PUNTOCOMA       reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)
    LLAVECIERRA     reduce using rule 76 (estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA .)


state 162

    (52) paresClaveValor -> paresClaveValor COMA valores . DOSPUNTOS valores

    DOSPUNTOS       shift and go to state 164


state 163

    (51) paresClaveValor -> valores DOSPUNTOS valores .

    LLAVECIERRA     reduce using rule 51 (paresClaveValor -> valores DOSPUNTOS valores .)
    COMA            reduce using rule 51 (paresClaveValor -> valores DOSPUNTOS valores .)


state 164

    (52) paresClaveValor -> paresClaveValor COMA valores DOSPUNTOS . valores
    (53) valores -> . VARIABLE
    (54) valores -> . NUMERO
    (55) valores -> . CADENA
    (56) valores -> . booleano
    (57) booleano -> . TRUE
    (58) booleano -> . FALSE

    VARIABLE        shift and go to state 60
    NUMERO          shift and go to state 62
    CADENA          shift and go to state 63
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    valores                        shift and go to state 165
    booleano                       shift and go to state 64

state 165

    (52) paresClaveValor -> paresClaveValor COMA valores DOSPUNTOS valores .

    LLAVECIERRA     reduce using rule 52 (paresClaveValor -> paresClaveValor COMA valores DOSPUNTOS valores .)
    COMA            reduce using rule 52 (paresClaveValor -> paresClaveValor COMA valores DOSPUNTOS valores .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAP in state 0 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 0 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 0 resolved as shift
WARNING: shift/reduce conflict for EXPORT in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for DO in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 0 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 0 resolved as shift
WARNING: shift/reduce conflict for VAR in state 0 resolved as shift
WARNING: shift/reduce conflict for NULL in state 0 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 6 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 17 resolved as shift
WARNING: shift/reduce conflict for MAP in state 53 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 53 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 53 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 53 resolved as shift
WARNING: shift/reduce conflict for EXPORT in state 53 resolved as shift
WARNING: shift/reduce conflict for IF in state 53 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 53 resolved as shift
WARNING: shift/reduce conflict for FOR in state 53 resolved as shift
WARNING: shift/reduce conflict for DO in state 53 resolved as shift
WARNING: shift/reduce conflict for STRING in state 53 resolved as shift
WARNING: shift/reduce conflict for INT in state 53 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 53 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 53 resolved as shift
WARNING: shift/reduce conflict for VAR in state 53 resolved as shift
WARNING: shift/reduce conflict for NULL in state 53 resolved as shift
WARNING: shift/reduce conflict for IF in state 55 resolved as shift
WARNING: shift/reduce conflict for MAP in state 55 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 55 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 55 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 55 resolved as shift
WARNING: shift/reduce conflict for EXPORT in state 55 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 55 resolved as shift
WARNING: shift/reduce conflict for FOR in state 55 resolved as shift
WARNING: shift/reduce conflict for DO in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING in state 55 resolved as shift
WARNING: shift/reduce conflict for INT in state 55 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 55 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 55 resolved as shift
WARNING: shift/reduce conflict for VAR in state 55 resolved as shift
WARNING: shift/reduce conflict for NULL in state 55 resolved as shift
WARNING: shift/reduce conflict for LLAVECIERRA in state 82 resolved as shift
WARNING: shift/reduce conflict for IF in state 115 resolved as shift
WARNING: shift/reduce conflict for MAP in state 115 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 115 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 115 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 115 resolved as shift
WARNING: shift/reduce conflict for EXPORT in state 115 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 115 resolved as shift
WARNING: shift/reduce conflict for FOR in state 115 resolved as shift
WARNING: shift/reduce conflict for DO in state 115 resolved as shift
WARNING: shift/reduce conflict for STRING in state 115 resolved as shift
WARNING: shift/reduce conflict for INT in state 115 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 115 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 115 resolved as shift
WARNING: shift/reduce conflict for VAR in state 115 resolved as shift
WARNING: shift/reduce conflict for NULL in state 115 resolved as shift
WARNING: shift/reduce conflict for MAP in state 119 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 119 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 119 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 119 resolved as shift
WARNING: shift/reduce conflict for EXPORT in state 119 resolved as shift
WARNING: shift/reduce conflict for IF in state 119 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 119 resolved as shift
WARNING: shift/reduce conflict for FOR in state 119 resolved as shift
WARNING: shift/reduce conflict for DO in state 119 resolved as shift
WARNING: shift/reduce conflict for STRING in state 119 resolved as shift
WARNING: shift/reduce conflict for INT in state 119 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 119 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 119 resolved as shift
WARNING: shift/reduce conflict for VAR in state 119 resolved as shift
WARNING: shift/reduce conflict for NULL in state 119 resolved as shift
WARNING: shift/reduce conflict for LLAVECIERRA in state 130 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 144 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 144 resolved as shift
WARNING: shift/reduce conflict for MAP in state 150 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 150 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 150 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 150 resolved as shift
WARNING: shift/reduce conflict for EXPORT in state 150 resolved as shift
WARNING: shift/reduce conflict for IF in state 150 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 150 resolved as shift
WARNING: shift/reduce conflict for FOR in state 150 resolved as shift
WARNING: shift/reduce conflict for DO in state 150 resolved as shift
WARNING: shift/reduce conflict for STRING in state 150 resolved as shift
WARNING: shift/reduce conflict for INT in state 150 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 150 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 150 resolved as shift
WARNING: shift/reduce conflict for VAR in state 150 resolved as shift
WARNING: shift/reduce conflict for NULL in state 150 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (bloque -> empty)
WARNING: rejected rule (asignacion -> empty) in state 3
WARNING: reduce/reduce conflict in state 78 resolved using rule (asignacion -> empty)
WARNING: rejected rule (asignacionVacio -> empty) in state 78
WARNING: Rule (asignacionVacio -> empty) is never reduced
