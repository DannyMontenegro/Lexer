
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ASIGNACIONAUMENTADA ASIGNACIONDISMINUIDA BOOL CADENA COMA COMILLASDOBLES COMILLASSIMPLES CORCHETEABRE CORCHETECIERRA DIFERENTEQUE DIVENTERA DIVISION DO DOSPUNTOS DOUBLE DYNAMIC ELSE EXPORT FALSE FINAL FLECHA FOR IF IGUAL IGUALQUE IMPORT IN INT IS LIST LLAVEABRE LLAVECIERRA LPAREN MAP MAYORQUE MENORQUE MULTIPLICACION NEW NOT NULL NUMERO PRINT PUNTO PUNTOCOMA REQUIRED RESIDUO RESTA RETURN RPAREN SET STRING SUMA SUPER THIS TRUE VAR VARIABLE VOID WHILEfuncion : tipoDato VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque RETURN valores PUNTOCOMA LLAVECIERRA\n                | VOID VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque LLAVECIERRA\n                | VOID VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque RETURN PUNTOCOMA LLAVECIERRAparametros : tipoDato VARIABLE\n                    | parametros COMA tipoDato VARIABLE\n                    | emptybloque : expresion\n                | bloque expresion\n                | emptyexpresion : mapa PUNTOCOMA\n                | mapaFunciones PUNTOCOMA\n                | asignacion PUNTOCOMAimport : IMPORT CADENA PUNTOCOMAasignacion : VARIABLE operadores_asignacion valores\n                     | tipoDato VARIABLE IGUAL valores\n                     | VARIABLE IGUAL comparacion\n                     | BOOL VARIABLE IGUAL comparacion\n                     | VARIABLE operadores_asignacion operacion_aritmetica\n                     | tipoDato VARIABLE IGUAL operacion_aritmeticaoperacion_aritmetica : valores operadores_aritmeticos valores\n                            | operacion_aritmetica operadores_aritmeticos valoresoperadores_aritmeticos : SUMA\n                                | RESTA\n                                | MULTIPLICACION\n                                | DIVISION\n                                | DIVENTERA\n                                | RESIDUOoperadores_asignacion : IGUAL\n                                | ASIGNACIONAUMENTADA\n                                | ASIGNACIONDISMINUIDAcomparacion : valores comparador valores\n                    | comparacion comparador valores comparador : MENORQUE\n                    | MAYORQUE\n                    | IGUALQUE\n                    | DIFERENTEQUEmapa : MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa\n                | mapaFuncionesmapaFunciones : mapa PUNTO VARIABLE LPAREN RPAREN\n                    | mapa PUNTO VARIABLE LPAREN valores\n                    | VARIABLE PUNTO VARIABLE LPAREN RPAREN\n                    | VARIABLE PUNTO VARIABLE LPAREN valores RPARENcreacionMapa : LLAVEABRE paresClaveValor LLAVECIERRA\n                        | VARIABLEparesClaveValor : valores DOSPUNTOS valores\n                        | paresClaveValor COMA valores DOSPUNTOS valoresvalores : VARIABLE\n                    | NUMERO\n                    | CADENA\n                    | booleano booleano : TRUE\n                | FALSEtipoDato : STRING\n                | INT\n                | BOOL\n                | DOUBLE\n                | DYNAMIC\n                | VAR empty :'
    
_lr_action_items = {'VOID':([0,],[3,]),'STRING':([0,12,13,20,22,24,27,28,29,36,44,45,47,48,49,89,],[4,4,4,4,4,4,4,-7,-9,4,-8,-10,-11,-12,4,4,]),'INT':([0,12,13,20,22,24,27,28,29,36,44,45,47,48,49,89,],[5,5,5,5,5,5,5,-7,-9,5,-8,-10,-11,-12,5,5,]),'BOOL':([0,12,13,20,22,24,27,28,29,36,44,45,47,48,49,89,],[6,6,6,6,34,34,34,-7,-9,34,-8,-10,-11,-12,6,6,]),'DOUBLE':([0,12,13,20,22,24,27,28,29,36,44,45,47,48,49,89,],[7,7,7,7,7,7,7,-7,-9,7,-8,-10,-11,-12,7,7,]),'DYNAMIC':([0,12,13,20,22,24,27,28,29,36,44,45,47,48,49,89,],[8,8,8,8,8,8,8,-7,-9,8,-8,-10,-11,-12,8,8,]),'VAR':([0,12,13,20,22,24,27,28,29,36,44,45,47,48,49,89,],[9,9,9,9,9,9,9,-7,-9,9,-8,-10,-11,-12,9,9,]),'$end':([1,51,91,98,],[0,-2,-3,-1,]),'VARIABLE':([2,3,4,5,6,7,8,9,14,22,23,24,25,27,28,29,34,36,38,39,40,41,42,43,44,45,46,47,48,53,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,103,105,108,112,113,116,],[10,11,-53,-54,-55,-56,-57,-58,18,26,35,26,37,26,-7,-9,50,26,54,55,55,-29,-30,55,-8,-10,66,-11,-12,55,55,55,55,-22,-23,-24,-25,-26,-27,55,55,-33,-34,-35,-36,55,55,104,106,55,55,55,55,]),'COMA':([4,5,6,7,8,9,12,13,15,16,17,18,35,55,58,59,60,61,62,67,109,115,117,],[-53,-54,-55,-56,-57,-58,-59,-59,20,-6,20,-4,-5,-47,-48,-49,-50,-51,-52,89,112,-45,-46,]),'MAYORQUE':([4,5,6,7,8,9,55,58,59,60,61,62,63,64,90,96,97,101,],[-53,-54,-55,-56,-57,-58,-47,-48,-49,-50,-51,-52,83,83,83,-32,-31,103,]),'LPAREN':([10,11,54,66,],[12,13,72,88,]),'RPAREN':([12,13,15,16,17,18,35,55,58,59,60,61,62,72,88,93,],[-59,-59,19,-6,21,-4,-5,-47,-48,-49,-50,-51,-52,92,99,102,]),'LLAVEABRE':([19,21,105,],[22,24,108,]),'RETURN':([22,24,27,28,29,36,44,45,47,48,],[-59,-59,43,-7,-9,52,-8,-10,-11,-12,]),'MAP':([22,24,27,28,29,36,44,45,47,48,],[33,33,33,-7,-9,33,-8,-10,-11,-12,]),'LLAVECIERRA':([24,28,29,36,44,45,47,48,55,58,59,60,61,62,69,87,109,115,117,],[-59,-7,-9,51,-8,-10,-11,-12,-47,-48,-49,-50,-51,-52,91,98,111,-45,-46,]),'PUNTO':([26,30,31,55,58,59,60,61,62,92,99,100,102,106,107,111,],[38,46,-38,-47,-48,-49,-50,-51,-52,-41,-39,-40,-42,-44,-37,-43,]),'IGUAL':([26,37,50,104,],[40,53,68,105,]),'ASIGNACIONAUMENTADA':([26,],[41,]),'ASIGNACIONDISMINUIDA':([26,],[42,]),'PUNTOCOMA':([30,31,32,52,55,56,57,58,59,60,61,62,63,65,70,71,90,92,94,95,96,97,99,100,102,106,107,111,],[45,47,48,69,-47,-14,-18,-48,-49,-50,-51,-52,-16,87,-15,-19,-17,-41,-20,-21,-32,-31,-39,-40,-42,-44,-37,-43,]),'MENORQUE':([33,55,58,59,60,61,62,63,64,90,96,97,],[49,-47,-48,-49,-50,-51,-52,82,82,82,-32,-31,]),'NUMERO':([39,40,41,42,43,53,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,108,112,113,116,],[58,58,-29,-30,58,58,58,58,58,-22,-23,-24,-25,-26,-27,58,58,-33,-34,-35,-36,58,58,58,58,58,58,]),'CADENA':([39,40,41,42,43,53,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,108,112,113,116,],[59,59,-29,-30,59,59,59,59,59,-22,-23,-24,-25,-26,-27,59,59,-33,-34,-35,-36,59,59,59,59,59,59,]),'TRUE':([39,40,41,42,43,53,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,108,112,113,116,],[61,61,-29,-30,61,61,61,61,61,-22,-23,-24,-25,-26,-27,61,61,-33,-34,-35,-36,61,61,61,61,61,61,]),'FALSE':([39,40,41,42,43,53,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,108,112,113,116,],[62,62,-29,-30,62,62,62,62,62,-22,-23,-24,-25,-26,-27,62,62,-33,-34,-35,-36,62,62,62,62,62,62,]),'SUMA':([55,56,57,58,59,60,61,62,70,71,94,95,],[-47,74,74,-48,-49,-50,-51,-52,74,74,-20,-21,]),'RESTA':([55,56,57,58,59,60,61,62,70,71,94,95,],[-47,75,75,-48,-49,-50,-51,-52,75,75,-20,-21,]),'MULTIPLICACION':([55,56,57,58,59,60,61,62,70,71,94,95,],[-47,76,76,-48,-49,-50,-51,-52,76,76,-20,-21,]),'DIVISION':([55,56,57,58,59,60,61,62,70,71,94,95,],[-47,77,77,-48,-49,-50,-51,-52,77,77,-20,-21,]),'DIVENTERA':([55,56,57,58,59,60,61,62,70,71,94,95,],[-47,78,78,-48,-49,-50,-51,-52,78,78,-20,-21,]),'RESIDUO':([55,56,57,58,59,60,61,62,70,71,94,95,],[-47,79,79,-48,-49,-50,-51,-52,79,79,-20,-21,]),'IGUALQUE':([55,58,59,60,61,62,63,64,90,96,97,],[-47,-48,-49,-50,-51,-52,84,84,84,-32,-31,]),'DIFERENTEQUE':([55,58,59,60,61,62,63,64,90,96,97,],[-47,-48,-49,-50,-51,-52,85,85,85,-32,-31,]),'DOSPUNTOS':([55,58,59,60,61,62,110,114,],[-47,-48,-49,-50,-51,-52,113,116,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'funcion':([0,],[1,]),'tipoDato':([0,12,13,20,22,24,27,36,49,89,],[2,14,14,23,25,25,25,25,67,101,]),'parametros':([12,13,],[15,17,]),'empty':([12,13,22,24,],[16,16,29,29,]),'bloque':([22,24,],[27,36,]),'expresion':([22,24,27,36,],[28,28,44,44,]),'mapa':([22,24,27,36,],[30,30,30,30,]),'mapaFunciones':([22,24,27,36,],[31,31,31,31,]),'asignacion':([22,24,27,36,],[32,32,32,32,]),'operadores_asignacion':([26,],[39,]),'valores':([39,40,43,53,68,72,73,80,81,86,88,108,112,113,116,],[56,64,65,70,64,93,94,95,96,97,100,110,114,115,117,]),'operacion_aritmetica':([39,53,],[57,71,]),'booleano':([39,40,43,53,68,72,73,80,81,86,88,108,112,113,116,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'comparacion':([40,68,],[63,90,]),'operadores_aritmeticos':([56,57,70,71,],[73,80,73,80,]),'comparador':([63,64,90,],[81,86,81,]),'creacionMapa':([105,],[107,]),'paresClaveValor':([108,],[109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> funcion","S'",1,None,None,None),
  ('funcion -> tipoDato VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque RETURN valores PUNTOCOMA LLAVECIERRA','funcion',11,'p_funciones','sintactico.py',8),
  ('funcion -> VOID VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque LLAVECIERRA','funcion',8,'p_funciones','sintactico.py',9),
  ('funcion -> VOID VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque RETURN PUNTOCOMA LLAVECIERRA','funcion',10,'p_funciones','sintactico.py',10),
  ('parametros -> tipoDato VARIABLE','parametros',2,'p_parametros','sintactico.py',16),
  ('parametros -> parametros COMA tipoDato VARIABLE','parametros',4,'p_parametros','sintactico.py',17),
  ('parametros -> empty','parametros',1,'p_parametros','sintactico.py',18),
  ('bloque -> expresion','bloque',1,'p_bloque_codigo','sintactico.py',21),
  ('bloque -> bloque expresion','bloque',2,'p_bloque_codigo','sintactico.py',22),
  ('bloque -> empty','bloque',1,'p_bloque_codigo','sintactico.py',23),
  ('expresion -> mapa PUNTOCOMA','expresion',2,'p_expresion','sintactico.py',26),
  ('expresion -> mapaFunciones PUNTOCOMA','expresion',2,'p_expresion','sintactico.py',27),
  ('expresion -> asignacion PUNTOCOMA','expresion',2,'p_expresion','sintactico.py',28),
  ('import -> IMPORT CADENA PUNTOCOMA','import',3,'p_import','sintactico.py',31),
  ('asignacion -> VARIABLE operadores_asignacion valores','asignacion',3,'p_asignacion','sintactico.py',34),
  ('asignacion -> tipoDato VARIABLE IGUAL valores','asignacion',4,'p_asignacion','sintactico.py',35),
  ('asignacion -> VARIABLE IGUAL comparacion','asignacion',3,'p_asignacion','sintactico.py',36),
  ('asignacion -> BOOL VARIABLE IGUAL comparacion','asignacion',4,'p_asignacion','sintactico.py',37),
  ('asignacion -> VARIABLE operadores_asignacion operacion_aritmetica','asignacion',3,'p_asignacion','sintactico.py',38),
  ('asignacion -> tipoDato VARIABLE IGUAL operacion_aritmetica','asignacion',4,'p_asignacion','sintactico.py',39),
  ('operacion_aritmetica -> valores operadores_aritmeticos valores','operacion_aritmetica',3,'p_operacion_aritmetica','sintactico.py',42),
  ('operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos valores','operacion_aritmetica',3,'p_operacion_aritmetica','sintactico.py',43),
  ('operadores_aritmeticos -> SUMA','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',48),
  ('operadores_aritmeticos -> RESTA','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',49),
  ('operadores_aritmeticos -> MULTIPLICACION','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',50),
  ('operadores_aritmeticos -> DIVISION','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',51),
  ('operadores_aritmeticos -> DIVENTERA','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',52),
  ('operadores_aritmeticos -> RESIDUO','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',53),
  ('operadores_asignacion -> IGUAL','operadores_asignacion',1,'p_operadores_asignacion','sintactico.py',56),
  ('operadores_asignacion -> ASIGNACIONAUMENTADA','operadores_asignacion',1,'p_operadores_asignacion','sintactico.py',57),
  ('operadores_asignacion -> ASIGNACIONDISMINUIDA','operadores_asignacion',1,'p_operadores_asignacion','sintactico.py',58),
  ('comparacion -> valores comparador valores','comparacion',3,'p_comparacion','sintactico.py',61),
  ('comparacion -> comparacion comparador valores','comparacion',3,'p_comparacion','sintactico.py',62),
  ('comparador -> MENORQUE','comparador',1,'p_comparador','sintactico.py',65),
  ('comparador -> MAYORQUE','comparador',1,'p_comparador','sintactico.py',66),
  ('comparador -> IGUALQUE','comparador',1,'p_comparador','sintactico.py',67),
  ('comparador -> DIFERENTEQUE','comparador',1,'p_comparador','sintactico.py',68),
  ('mapa -> MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa','mapa',9,'p_mapa','sintactico.py',72),
  ('mapa -> mapaFunciones','mapa',1,'p_mapa','sintactico.py',73),
  ('mapaFunciones -> mapa PUNTO VARIABLE LPAREN RPAREN','mapaFunciones',5,'p_mapa_funciones','sintactico.py',76),
  ('mapaFunciones -> mapa PUNTO VARIABLE LPAREN valores','mapaFunciones',5,'p_mapa_funciones','sintactico.py',77),
  ('mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN RPAREN','mapaFunciones',5,'p_mapa_funciones','sintactico.py',78),
  ('mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN valores RPAREN','mapaFunciones',6,'p_mapa_funciones','sintactico.py',79),
  ('creacionMapa -> LLAVEABRE paresClaveValor LLAVECIERRA','creacionMapa',3,'p_creacion_mapa','sintactico.py',82),
  ('creacionMapa -> VARIABLE','creacionMapa',1,'p_creacion_mapa','sintactico.py',83),
  ('paresClaveValor -> valores DOSPUNTOS valores','paresClaveValor',3,'p_pares_clave_valor','sintactico.py',86),
  ('paresClaveValor -> paresClaveValor COMA valores DOSPUNTOS valores','paresClaveValor',5,'p_pares_clave_valor','sintactico.py',87),
  ('valores -> VARIABLE','valores',1,'p_valores','sintactico.py',90),
  ('valores -> NUMERO','valores',1,'p_valores','sintactico.py',91),
  ('valores -> CADENA','valores',1,'p_valores','sintactico.py',92),
  ('valores -> booleano','valores',1,'p_valores','sintactico.py',93),
  ('booleano -> TRUE','booleano',1,'p_booleano','sintactico.py',96),
  ('booleano -> FALSE','booleano',1,'p_booleano','sintactico.py',97),
  ('tipoDato -> STRING','tipoDato',1,'p_tipo_dato','sintactico.py',100),
  ('tipoDato -> INT','tipoDato',1,'p_tipo_dato','sintactico.py',101),
  ('tipoDato -> BOOL','tipoDato',1,'p_tipo_dato','sintactico.py',102),
  ('tipoDato -> DOUBLE','tipoDato',1,'p_tipo_dato','sintactico.py',103),
  ('tipoDato -> DYNAMIC','tipoDato',1,'p_tipo_dato','sintactico.py',104),
  ('tipoDato -> VAR','tipoDato',1,'p_tipo_dato','sintactico.py',105),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',108),
]
