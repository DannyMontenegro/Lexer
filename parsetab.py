
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ASIGNACIONAUMENTADA ASIGNACIONDISMINUIDA BOOL CADENA COMA COMILLASDOBLES COMILLASSIMPLES CORCHETEABRE CORCHETECIERRA DIFERENTEQUE DIVENTERA DIVISION DO DOSPUNTOS DOUBLE DYNAMIC ELSE EXPORT FALSE FINAL FLECHA FOR IF IGUAL IGUALQUE IMPORT IN INT IS LIST LLAVEABRE LLAVECIERRA LPAREN MAP MAYORQUE MENORQUE MULTIPLICACION NEW NOT NULL NUMERO PRINT PUNTO PUNTOCOMA REQUIRED RESIDUO RESTA RETURN RPAREN SET STRING SUMA SUPER THIS TRUE VAR VARIABLE VOID WHILEasignacion : VARIABLE operadores_asignacion valores\n                     | tipoDato VARIABLE IGUAL valores\n                     | BOOL VARIABLE IGUAL comparacion\n                     | tipoDato VARIABLE IGUAL operacion_aritmeticaoperacion_aritmetica : valores operadores_aritmeticos valores\n                            | operacion_aritmetica operadores_aritmeticos valoresoperadores_aritmeticos : SUMA\n                                | RESTA\n                                | MULTIPLICACION\n                                | DIVISION\n                                | DIVENTERA\n                                | RESIDUOoperadores_asignacion : IGUAL\n                             | ASIGNACIONAUMENTADA\n                             | ASIGNACIONDISMINUIDAcomparacion : valores comparador valores\n                    | comparacion comparador valores comparador : MENORQUE\n                    | MAYORQUE\n                    | IGUALQUE\n                    | DIFERENTEQUEmapa : MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL      creacionMapamapaFunciones : VARIABLE PUNTO VARIABLE LPAREN RPAREN\n                    | VARIABLE PUNTO VARIABLE LPAREN valores RPARENcreacionMapa : LLAVEABRE paresClaveValor LLAVECIERRA\n                        | VARIABLEparesClaveValor : valores DOSPUNTOS valores\n                        | paresClaveValor COMA valores DOSPUNTOS valoresvalores : NUMERO\n                | CADENA\n                | booleano\n                | VARIABLE booleano : TRUE\n                | FALSEtipoDato : STRING\n                | INT\n                | BOOL\n                | DOUBLE\n                | DYNAMIC\n                | VAR '
    
_lr_action_items = {'VARIABLE':([0,3,4,5,6,7,8,9,10,11,12,13,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,],[2,14,15,-35,-36,-38,-39,-40,16,-13,-14,-15,16,16,16,-7,-8,-9,-10,-11,-12,16,16,-18,-19,-20,-21,16,]),'BOOL':([0,],[4,]),'STRING':([0,],[5,]),'INT':([0,],[6,]),'DOUBLE':([0,],[7,]),'DYNAMIC':([0,],[8,]),'VAR':([0,],[9,]),'$end':([1,16,17,18,19,20,21,22,25,26,27,43,44,45,46,],[0,-32,-1,-29,-30,-31,-33,-34,-2,-4,-3,-5,-6,-17,-16,]),'IGUAL':([2,14,15,],[11,23,24,]),'ASIGNACIONAUMENTADA':([2,],[12,]),'ASIGNACIONDISMINUIDA':([2,],[13,]),'NUMERO':([10,11,12,13,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,],[18,-13,-14,-15,18,18,18,-7,-8,-9,-10,-11,-12,18,18,-18,-19,-20,-21,18,]),'CADENA':([10,11,12,13,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,],[19,-13,-14,-15,19,19,19,-7,-8,-9,-10,-11,-12,19,19,-18,-19,-20,-21,19,]),'TRUE':([10,11,12,13,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,],[21,-13,-14,-15,21,21,21,-7,-8,-9,-10,-11,-12,21,21,-18,-19,-20,-21,21,]),'FALSE':([10,11,12,13,23,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,],[22,-13,-14,-15,22,22,22,-7,-8,-9,-10,-11,-12,22,22,-18,-19,-20,-21,22,]),'SUMA':([16,18,19,20,21,22,25,26,43,44,],[-32,-29,-30,-31,-33,-34,30,30,-5,-6,]),'RESTA':([16,18,19,20,21,22,25,26,43,44,],[-32,-29,-30,-31,-33,-34,31,31,-5,-6,]),'MULTIPLICACION':([16,18,19,20,21,22,25,26,43,44,],[-32,-29,-30,-31,-33,-34,32,32,-5,-6,]),'DIVISION':([16,18,19,20,21,22,25,26,43,44,],[-32,-29,-30,-31,-33,-34,33,33,-5,-6,]),'DIVENTERA':([16,18,19,20,21,22,25,26,43,44,],[-32,-29,-30,-31,-33,-34,34,34,-5,-6,]),'RESIDUO':([16,18,19,20,21,22,25,26,43,44,],[-32,-29,-30,-31,-33,-34,35,35,-5,-6,]),'MENORQUE':([16,18,19,20,21,22,27,28,45,46,],[-32,-29,-30,-31,-33,-34,38,38,-17,-16,]),'MAYORQUE':([16,18,19,20,21,22,27,28,45,46,],[-32,-29,-30,-31,-33,-34,39,39,-17,-16,]),'IGUALQUE':([16,18,19,20,21,22,27,28,45,46,],[-32,-29,-30,-31,-33,-34,40,40,-17,-16,]),'DIFERENTEQUE':([16,18,19,20,21,22,27,28,45,46,],[-32,-29,-30,-31,-33,-34,41,41,-17,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'asignacion':([0,],[1,]),'tipoDato':([0,],[3,]),'operadores_asignacion':([2,],[10,]),'valores':([10,23,24,29,36,37,42,],[17,25,28,43,44,45,46,]),'booleano':([10,23,24,29,36,37,42,],[20,20,20,20,20,20,20,]),'operacion_aritmetica':([23,],[26,]),'comparacion':([24,],[27,]),'operadores_aritmeticos':([25,26,],[29,36,]),'comparador':([27,28,],[37,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> asignacion","S'",1,None,None,None),
  ('asignacion -> VARIABLE operadores_asignacion valores','asignacion',3,'p_asignacion','sintactico.py',44),
  ('asignacion -> tipoDato VARIABLE IGUAL valores','asignacion',4,'p_asignacion','sintactico.py',45),
  ('asignacion -> BOOL VARIABLE IGUAL comparacion','asignacion',4,'p_asignacion','sintactico.py',46),
  ('asignacion -> tipoDato VARIABLE IGUAL operacion_aritmetica','asignacion',4,'p_asignacion','sintactico.py',47),
  ('operacion_aritmetica -> valores operadores_aritmeticos valores','operacion_aritmetica',3,'p_operacion_aritmetica','sintactico.py',52),
  ('operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos valores','operacion_aritmetica',3,'p_operacion_aritmetica','sintactico.py',53),
  ('operadores_aritmeticos -> SUMA','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',57),
  ('operadores_aritmeticos -> RESTA','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',58),
  ('operadores_aritmeticos -> MULTIPLICACION','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',59),
  ('operadores_aritmeticos -> DIVISION','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',60),
  ('operadores_aritmeticos -> DIVENTERA','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',61),
  ('operadores_aritmeticos -> RESIDUO','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',62),
  ('operadores_asignacion -> IGUAL','operadores_asignacion',1,'p_operadores_asignacion','sintactico.py',65),
  ('operadores_asignacion -> ASIGNACIONAUMENTADA','operadores_asignacion',1,'p_operadores_asignacion','sintactico.py',66),
  ('operadores_asignacion -> ASIGNACIONDISMINUIDA','operadores_asignacion',1,'p_operadores_asignacion','sintactico.py',67),
  ('comparacion -> valores comparador valores','comparacion',3,'p_comparacion','sintactico.py',70),
  ('comparacion -> comparacion comparador valores','comparacion',3,'p_comparacion','sintactico.py',71),
  ('comparador -> MENORQUE','comparador',1,'p_comparador','sintactico.py',74),
  ('comparador -> MAYORQUE','comparador',1,'p_comparador','sintactico.py',75),
  ('comparador -> IGUALQUE','comparador',1,'p_comparador','sintactico.py',76),
  ('comparador -> DIFERENTEQUE','comparador',1,'p_comparador','sintactico.py',77),
  ('mapa -> MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa','mapa',9,'p_mapa','sintactico.py',81),
  ('mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN RPAREN','mapaFunciones',5,'p_mapa_funciones','sintactico.py',84),
  ('mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN valores RPAREN','mapaFunciones',6,'p_mapa_funciones','sintactico.py',85),
  ('creacionMapa -> LLAVEABRE paresClaveValor LLAVECIERRA','creacionMapa',3,'p_creacion_mapa','sintactico.py',88),
  ('creacionMapa -> VARIABLE','creacionMapa',1,'p_creacion_mapa','sintactico.py',89),
  ('paresClaveValor -> valores DOSPUNTOS valores','paresClaveValor',3,'p_pares_clave_valor','sintactico.py',92),
  ('paresClaveValor -> paresClaveValor COMA valores DOSPUNTOS valores','paresClaveValor',5,'p_pares_clave_valor','sintactico.py',93),
  ('valores -> NUMERO','valores',1,'p_valores','sintactico.py',96),
  ('valores -> CADENA','valores',1,'p_valores','sintactico.py',97),
  ('valores -> booleano','valores',1,'p_valores','sintactico.py',98),
  ('valores -> VARIABLE','valores',1,'p_valores','sintactico.py',99),
  ('booleano -> TRUE','booleano',1,'p_booleano','sintactico.py',102),
  ('booleano -> FALSE','booleano',1,'p_booleano','sintactico.py',103),
  ('tipoDato -> STRING','tipoDato',1,'p_tipo_dato','sintactico.py',106),
  ('tipoDato -> INT','tipoDato',1,'p_tipo_dato','sintactico.py',107),
  ('tipoDato -> BOOL','tipoDato',1,'p_tipo_dato','sintactico.py',108),
  ('tipoDato -> DOUBLE','tipoDato',1,'p_tipo_dato','sintactico.py',109),
  ('tipoDato -> DYNAMIC','tipoDato',1,'p_tipo_dato','sintactico.py',110),
  ('tipoDato -> VAR','tipoDato',1,'p_tipo_dato','sintactico.py',111),
]
