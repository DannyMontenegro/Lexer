
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ASIGNACIONAUMENTADA ASIGNACIONDISMINUIDA BOOL CADENA COMA COMILLASDOBLES COMILLASSIMPLES CORCHETEABRE CORCHETECIERRA DIFERENTEQUE DIVENTERA DIVISION DO DOSPUNTOS DOUBLE DYNAMIC ELSE EXPORT FALSE FINAL FLECHA FOR IF IGUAL IGUALQUE IMPORT IN INT IS LIST LLAVEABRE LLAVECIERRA LPAREN MAP MAYORQUE MENORQUE MULTIPLICACION NEW NOT NULL NUMERO PRINT PUNTO PUNTOCOMA REQUIRED RESIDUO RESTA RETURN RPAREN SET STRING SUMA SUPER THIS TRUE VAR VARIABLE VOID WHILEbloque : expresion\n                | bloque expresion\n                | empty\n                | estructuras\n                funcion : tipoDato VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque RETURN valores PUNTOCOMA LLAVECIERRA\n                | VOID VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque LLAVECIERRA\n                | VOID VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque RETURN PUNTOCOMA LLAVECIERRAparametros : tipoDato VARIABLE\n                    | parametros COMA tipoDato VARIABLE\n                    | emptyexpresion : mapa PUNTOCOMA\n                | mapaFunciones PUNTOCOMA\n                | asignacion PUNTOCOMAimport : IMPORT CADENA PUNTOCOMAasignacion : VARIABLE operadores_asignacion valores\n                     | tipoDato VARIABLE IGUAL valores\n                     | BOOL VARIABLE IGUAL comparacion\n                     | tipoDato VARIABLE IGUAL operacion_aritmetica\n                     | emptyoperacion_aritmetica : valores operadores_aritmeticos valores\n                            | operacion_aritmetica operadores_aritmeticos valoresoperadores_aritmeticos : SUMA\n                                | RESTA\n                                | MULTIPLICACION\n                                | DIVISION\n                                | DIVENTERA\n                                | RESIDUOoperadores_asignacion : IGUAL\n                             | ASIGNACIONAUMENTADA\n                             | ASIGNACIONDISMINUIDAcomparacion : valores comparador valores\n                    | comparacion comparador valores comparador : MENORQUE\n                    | MAYORQUE\n                    | IGUALQUE\n                    | DIFERENTEQUEmapa : MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa\n                | mapaFuncionesmapaFunciones : mapa PUNTO VARIABLE LPAREN RPAREN\n                    | mapa PUNTO VARIABLE LPAREN valores\n                    | VARIABLE PUNTO VARIABLE LPAREN RPAREN\n                    | VARIABLE PUNTO VARIABLE LPAREN valores RPARENcreacionMapa : LLAVEABRE paresClaveValor LLAVECIERRA\n                        | VARIABLEparesClaveValor : valores DOSPUNTOS valores\n                        | paresClaveValor COMA valores DOSPUNTOS valoresvalores : VARIABLE\n                | NUMERO\n                | CADENA\n                | booleano booleano : TRUE\n                | FALSEtipoDato : STRING\n                | INT\n                | BOOL\n                | DOUBLE\n                | DYNAMIC\n                | VAR  estructuras : estructuraIf\n                    | estructuraWhile\n                    | estructuraFor estructuraIf : IF LPAREN argumentoEstructura  RPAREN LLAVEABRE bloque LLAVECIERRA\n                    | IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA\n                    | estructuraIfElse\n      estructuraIfElse : estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA\n                          | estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA\n     estructuraWhile : WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA\n     estructuraFor : FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio  PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA asignacionVacio : asignacion\n                       | empty comparacionVacio : comparacion\n                         | booleano\n                         | empty aumento : VARIABLE IGUAL operacion_aritmetica\n                | VARIABLE operadores_asignacion NUMERO\n                | VARIABLE operadores_asignacion VARIABLE\n                | empty  argumentoEstructura : VARIABLE\n                           | booleano\n                           | comparacion\n    empty :'
    
_lr_action_items = {'MAP':([0,1,2,3,4,8,9,10,16,24,26,28,29,43,67,68,85,86,98,101,110,111,112,115,116,117,128,135,139,],[11,11,-1,-3,-4,-59,-60,-61,-64,-2,-11,-12,-13,11,-59,11,-66,-65,11,11,11,-59,11,-62,-63,-67,11,11,-68,]),'VARIABLE':([0,1,2,3,4,8,9,10,12,14,16,19,20,21,22,23,24,26,27,28,29,33,34,35,36,37,39,40,41,43,46,55,66,67,68,72,75,76,77,78,79,80,82,85,86,88,89,90,91,92,93,94,95,98,101,106,110,111,112,113,115,116,117,121,123,124,127,128,135,137,138,139,142,],[13,13,-1,-3,-4,-59,-60,-61,32,38,-64,-53,-54,-56,-57,-58,-2,-11,42,-12,-13,47,48,-28,-29,-30,57,57,65,13,48,48,48,-59,13,48,48,-33,-34,-35,-36,48,48,-66,-65,48,-22,-23,-24,-25,-26,-27,48,13,13,114,13,-59,13,119,-62,-63,-67,125,48,131,48,13,13,48,48,-68,48,]),'BOOL':([0,1,2,3,4,8,9,10,16,24,26,28,29,31,41,43,67,68,69,85,86,98,101,110,111,112,115,116,117,128,135,139,],[14,14,-1,-3,-4,-59,-60,-61,-64,-2,-11,-12,-13,45,14,14,-59,14,45,-66,-65,14,14,14,-59,14,-62,-63,-67,14,14,-68,]),'STRING':([0,1,2,3,4,8,9,10,16,24,26,28,29,31,41,43,67,68,69,85,86,98,101,110,111,112,115,116,117,128,135,139,],[19,19,-1,-3,-4,-59,-60,-61,-64,-2,-11,-12,-13,19,19,19,-59,19,19,-66,-65,19,19,19,-59,19,-62,-63,-67,19,19,-68,]),'INT':([0,1,2,3,4,8,9,10,16,24,26,28,29,31,41,43,67,68,69,85,86,98,101,110,111,112,115,116,117,128,135,139,],[20,20,-1,-3,-4,-59,-60,-61,-64,-2,-11,-12,-13,20,20,20,-59,20,20,-66,-65,20,20,20,-59,20,-62,-63,-67,20,20,-68,]),'DOUBLE':([0,1,2,3,4,8,9,10,16,24,26,28,29,31,41,43,67,68,69,85,86,98,101,110,111,112,115,116,117,128,135,139,],[21,21,-1,-3,-4,-59,-60,-61,-64,-2,-11,-12,-13,21,21,21,-59,21,21,-66,-65,21,21,21,-59,21,-62,-63,-67,21,21,-68,]),'DYNAMIC':([0,1,2,3,4,8,9,10,16,24,26,28,29,31,41,43,67,68,69,85,86,98,101,110,111,112,115,116,117,128,135,139,],[22,22,-1,-3,-4,-59,-60,-61,-64,-2,-11,-12,-13,22,22,22,-59,22,22,-66,-65,22,22,22,-59,22,-62,-63,-67,22,22,-68,]),'VAR':([0,1,2,3,4,8,9,10,16,24,26,28,29,31,41,43,67,68,69,85,86,98,101,110,111,112,115,116,117,128,135,139,],[23,23,-1,-3,-4,-59,-60,-61,-64,-2,-11,-12,-13,23,23,23,-59,23,23,-66,-65,23,23,23,-59,23,-62,-63,-67,23,23,-68,]),'$end':([0,1,2,3,4,8,9,10,16,24,26,28,29,85,86,115,116,117,139,],[-81,0,-1,-3,-4,-59,-60,-61,-64,-2,-11,-12,-13,-66,-65,-62,-63,-67,-68,]),'PUNTOCOMA':([0,1,2,3,4,5,6,7,8,9,10,16,24,25,26,28,29,41,43,48,49,50,51,52,53,54,62,63,64,67,68,70,71,73,82,83,84,85,86,96,98,99,100,101,102,103,104,105,107,108,109,110,111,112,115,116,117,125,126,128,135,136,139,],[-81,-81,-1,-3,-4,26,28,29,-59,-60,-61,-64,-2,-19,-11,-12,-13,-81,-81,-47,-15,-48,-49,-50,-51,-52,82,-69,-19,-59,-81,-16,-18,-17,-81,-39,-40,-66,-65,-41,-81,-32,-31,-81,113,-71,-72,-73,-20,-21,-42,-81,-59,-81,-62,-63,-67,-44,-37,-81,-81,-43,-68,]),'IF':([0,43,98,101,128,],[15,15,15,15,15,]),'WHILE':([0,43,98,101,128,],[17,17,17,17,17,]),'FOR':([0,43,98,101,128,],[18,18,18,18,18,]),'LLAVECIERRA':([2,3,4,8,9,10,16,24,26,28,29,43,48,50,51,52,53,54,67,68,85,86,98,101,110,111,112,115,116,117,128,133,135,139,141,143,],[-1,-3,-4,-59,-60,-61,-64,-2,-11,-12,-13,-81,-47,-48,-49,-50,-51,-52,85,86,-66,-65,-81,-81,115,116,117,-62,-63,-67,-81,136,139,-68,-45,-46,]),'PUNTO':([5,6,13,48,50,51,52,53,54,83,84,96,109,125,126,136,],[27,-38,33,-47,-48,-49,-50,-51,-52,-39,-40,-41,-42,-44,-37,-43,]),'ELSE':([8,16,67,85,86,111,115,116,],[30,-64,30,-66,-65,30,-62,-63,]),'MENORQUE':([11,48,50,51,52,53,54,57,58,59,60,73,99,100,103,104,],[31,-47,-48,-49,-50,-51,-52,-47,-50,76,76,76,-32,-31,76,-50,]),'IGUAL':([13,32,38,65,114,119,],[35,46,55,35,121,123,]),'ASIGNACIONAUMENTADA':([13,65,119,],[36,36,36,]),'ASIGNACIONDISMINUIDA':([13,65,119,],[37,37,37,]),'LPAREN':([15,17,18,42,47,],[39,40,41,66,72,]),'COMA':([19,20,21,22,23,44,45,48,50,51,52,53,54,133,141,143,],[-53,-54,-56,-57,-58,69,-55,-47,-48,-49,-50,-51,-52,137,-45,-46,]),'MAYORQUE':([19,20,21,22,23,45,48,50,51,52,53,54,57,58,59,60,73,87,99,100,103,104,],[-53,-54,-56,-57,-58,-55,-47,-48,-49,-50,-51,-52,-47,-50,77,77,77,106,-32,-31,77,-50,]),'LLAVEABRE':([30,74,81,121,122,],[43,98,101,127,128,]),'NUMERO':([34,35,36,37,39,40,46,55,66,72,75,76,77,78,79,80,82,88,89,90,91,92,93,94,95,123,124,127,137,138,142,],[50,-28,-29,-30,50,50,50,50,50,50,50,-33,-34,-35,-36,50,50,50,-22,-23,-24,-25,-26,-27,50,50,132,50,50,50,50,]),'CADENA':([34,35,36,37,39,40,46,55,66,72,75,76,77,78,79,80,82,88,89,90,91,92,93,94,95,123,127,137,138,142,],[51,-28,-29,-30,51,51,51,51,51,51,51,-33,-34,-35,-36,51,51,51,-22,-23,-24,-25,-26,-27,51,51,51,51,51,51,]),'TRUE':([34,35,36,37,39,40,46,55,66,72,75,76,77,78,79,80,82,88,89,90,91,92,93,94,95,123,127,137,138,142,],[53,-28,-29,-30,53,53,53,53,53,53,53,-33,-34,-35,-36,53,53,53,-22,-23,-24,-25,-26,-27,53,53,53,53,53,53,]),'FALSE':([34,35,36,37,39,40,46,55,66,72,75,76,77,78,79,80,82,88,89,90,91,92,93,94,95,123,127,137,138,142,],[54,-28,-29,-30,54,54,54,54,54,54,54,-33,-34,-35,-36,54,54,54,-22,-23,-24,-25,-26,-27,54,54,54,54,54,54,]),'SUMA':([48,50,51,52,53,54,70,71,107,108,129,130,],[-47,-48,-49,-50,-51,-52,89,89,-20,-21,89,89,]),'RESTA':([48,50,51,52,53,54,70,71,107,108,129,130,],[-47,-48,-49,-50,-51,-52,90,90,-20,-21,90,90,]),'MULTIPLICACION':([48,50,51,52,53,54,70,71,107,108,129,130,],[-47,-48,-49,-50,-51,-52,91,91,-20,-21,91,91,]),'DIVISION':([48,50,51,52,53,54,70,71,107,108,129,130,],[-47,-48,-49,-50,-51,-52,92,92,-20,-21,92,92,]),'DIVENTERA':([48,50,51,52,53,54,70,71,107,108,129,130,],[-47,-48,-49,-50,-51,-52,93,93,-20,-21,93,93,]),'RESIDUO':([48,50,51,52,53,54,70,71,107,108,129,130,],[-47,-48,-49,-50,-51,-52,94,94,-20,-21,94,94,]),'IGUALQUE':([48,50,51,52,53,54,57,58,59,60,73,99,100,103,104,],[-47,-48,-49,-50,-51,-52,-47,-50,78,78,78,-32,-31,78,-50,]),'DIFERENTEQUE':([48,50,51,52,53,54,57,58,59,60,73,99,100,103,104,],[-47,-48,-49,-50,-51,-52,-47,-50,79,79,79,-32,-31,79,-50,]),'RPAREN':([48,50,51,52,53,54,56,57,58,59,61,66,72,97,99,100,107,108,113,118,120,129,131,132,],[-47,-48,-49,-50,-51,-52,74,-78,-79,-80,81,83,96,109,-32,-31,-20,-21,-81,122,-77,-74,-76,-75,]),'DOSPUNTOS':([48,50,51,52,53,54,134,140,],[-47,-48,-49,-50,-51,-52,138,142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bloque':([0,43,98,101,128,],[1,68,110,112,135,]),'expresion':([0,1,43,68,98,101,110,112,128,135,],[2,24,2,24,2,2,24,24,2,24,]),'empty':([0,1,41,43,68,82,98,101,110,112,113,128,135,],[3,25,64,3,25,105,3,3,25,25,120,3,25,]),'estructuras':([0,43,98,101,128,],[4,4,4,4,4,]),'mapa':([0,1,43,68,98,101,110,112,128,135,],[5,5,5,5,5,5,5,5,5,5,]),'mapaFunciones':([0,1,43,68,98,101,110,112,128,135,],[6,6,6,6,6,6,6,6,6,6,]),'asignacion':([0,1,41,43,68,98,101,110,112,128,135,],[7,7,63,7,7,7,7,7,7,7,7,]),'estructuraIf':([0,43,98,101,128,],[8,67,111,8,8,]),'estructuraWhile':([0,43,98,101,128,],[9,9,9,9,9,]),'estructuraFor':([0,43,98,101,128,],[10,10,10,10,10,]),'tipoDato':([0,1,31,41,43,68,69,98,101,110,112,128,135,],[12,12,44,12,12,12,87,12,12,12,12,12,12,]),'estructuraIfElse':([0,43,98,101,128,],[16,16,16,16,16,]),'operadores_asignacion':([13,65,119,],[34,34,124,]),'valores':([34,39,40,46,55,66,72,75,80,82,88,95,123,127,137,138,142,],[49,60,60,70,60,84,97,99,100,60,107,108,130,134,140,141,143,]),'booleano':([34,39,40,46,55,66,72,75,80,82,88,95,123,127,137,138,142,],[52,58,58,52,52,52,52,52,52,104,52,52,52,52,52,52,52,]),'argumentoEstructura':([39,40,],[56,61,]),'comparacion':([39,40,55,82,],[59,59,73,103,]),'asignacionVacio':([41,],[62,]),'operacion_aritmetica':([46,123,],[71,129,]),'comparador':([59,60,73,103,],[75,80,75,75,]),'operadores_aritmeticos':([70,71,129,130,],[88,95,95,88,]),'comparacionVacio':([82,],[102,]),'aumento':([113,],[118,]),'creacionMapa':([121,],[126,]),'paresClaveValor':([127,],[133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> bloque","S'",1,None,None,None),
  ('bloque -> expresion','bloque',1,'p_bloque_codigo','sintactico.py',14),
  ('bloque -> bloque expresion','bloque',2,'p_bloque_codigo','sintactico.py',15),
  ('bloque -> empty','bloque',1,'p_bloque_codigo','sintactico.py',16),
  ('bloque -> estructuras','bloque',1,'p_bloque_codigo','sintactico.py',17),
  ('funcion -> tipoDato VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque RETURN valores PUNTOCOMA LLAVECIERRA','funcion',11,'p_funciones','sintactico.py',23),
  ('funcion -> VOID VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque LLAVECIERRA','funcion',8,'p_funciones','sintactico.py',24),
  ('funcion -> VOID VARIABLE LPAREN parametros RPAREN LLAVEABRE bloque RETURN PUNTOCOMA LLAVECIERRA','funcion',10,'p_funciones','sintactico.py',25),
  ('parametros -> tipoDato VARIABLE','parametros',2,'p_parametros','sintactico.py',28),
  ('parametros -> parametros COMA tipoDato VARIABLE','parametros',4,'p_parametros','sintactico.py',29),
  ('parametros -> empty','parametros',1,'p_parametros','sintactico.py',30),
  ('expresion -> mapa PUNTOCOMA','expresion',2,'p_expresion','sintactico.py',35),
  ('expresion -> mapaFunciones PUNTOCOMA','expresion',2,'p_expresion','sintactico.py',36),
  ('expresion -> asignacion PUNTOCOMA','expresion',2,'p_expresion','sintactico.py',37),
  ('import -> IMPORT CADENA PUNTOCOMA','import',3,'p_import','sintactico.py',40),
  ('asignacion -> VARIABLE operadores_asignacion valores','asignacion',3,'p_asignacion','sintactico.py',43),
  ('asignacion -> tipoDato VARIABLE IGUAL valores','asignacion',4,'p_asignacion','sintactico.py',44),
  ('asignacion -> BOOL VARIABLE IGUAL comparacion','asignacion',4,'p_asignacion','sintactico.py',45),
  ('asignacion -> tipoDato VARIABLE IGUAL operacion_aritmetica','asignacion',4,'p_asignacion','sintactico.py',46),
  ('asignacion -> empty','asignacion',1,'p_asignacion','sintactico.py',47),
  ('operacion_aritmetica -> valores operadores_aritmeticos valores','operacion_aritmetica',3,'p_operacion_aritmetica','sintactico.py',50),
  ('operacion_aritmetica -> operacion_aritmetica operadores_aritmeticos valores','operacion_aritmetica',3,'p_operacion_aritmetica','sintactico.py',51),
  ('operadores_aritmeticos -> SUMA','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',56),
  ('operadores_aritmeticos -> RESTA','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',57),
  ('operadores_aritmeticos -> MULTIPLICACION','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',58),
  ('operadores_aritmeticos -> DIVISION','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',59),
  ('operadores_aritmeticos -> DIVENTERA','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',60),
  ('operadores_aritmeticos -> RESIDUO','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintactico.py',61),
  ('operadores_asignacion -> IGUAL','operadores_asignacion',1,'p_operadores_asignacion','sintactico.py',64),
  ('operadores_asignacion -> ASIGNACIONAUMENTADA','operadores_asignacion',1,'p_operadores_asignacion','sintactico.py',65),
  ('operadores_asignacion -> ASIGNACIONDISMINUIDA','operadores_asignacion',1,'p_operadores_asignacion','sintactico.py',66),
  ('comparacion -> valores comparador valores','comparacion',3,'p_comparacion','sintactico.py',69),
  ('comparacion -> comparacion comparador valores','comparacion',3,'p_comparacion','sintactico.py',70),
  ('comparador -> MENORQUE','comparador',1,'p_comparador','sintactico.py',73),
  ('comparador -> MAYORQUE','comparador',1,'p_comparador','sintactico.py',74),
  ('comparador -> IGUALQUE','comparador',1,'p_comparador','sintactico.py',75),
  ('comparador -> DIFERENTEQUE','comparador',1,'p_comparador','sintactico.py',76),
  ('mapa -> MAP MENORQUE tipoDato COMA tipoDato MAYORQUE VARIABLE IGUAL creacionMapa','mapa',9,'p_mapa','sintactico.py',80),
  ('mapa -> mapaFunciones','mapa',1,'p_mapa','sintactico.py',81),
  ('mapaFunciones -> mapa PUNTO VARIABLE LPAREN RPAREN','mapaFunciones',5,'p_mapa_funciones','sintactico.py',84),
  ('mapaFunciones -> mapa PUNTO VARIABLE LPAREN valores','mapaFunciones',5,'p_mapa_funciones','sintactico.py',85),
  ('mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN RPAREN','mapaFunciones',5,'p_mapa_funciones','sintactico.py',86),
  ('mapaFunciones -> VARIABLE PUNTO VARIABLE LPAREN valores RPAREN','mapaFunciones',6,'p_mapa_funciones','sintactico.py',87),
  ('creacionMapa -> LLAVEABRE paresClaveValor LLAVECIERRA','creacionMapa',3,'p_creacion_mapa','sintactico.py',90),
  ('creacionMapa -> VARIABLE','creacionMapa',1,'p_creacion_mapa','sintactico.py',91),
  ('paresClaveValor -> valores DOSPUNTOS valores','paresClaveValor',3,'p_pares_clave_valor','sintactico.py',94),
  ('paresClaveValor -> paresClaveValor COMA valores DOSPUNTOS valores','paresClaveValor',5,'p_pares_clave_valor','sintactico.py',95),
  ('valores -> VARIABLE','valores',1,'p_valores','sintactico.py',98),
  ('valores -> NUMERO','valores',1,'p_valores','sintactico.py',99),
  ('valores -> CADENA','valores',1,'p_valores','sintactico.py',100),
  ('valores -> booleano','valores',1,'p_valores','sintactico.py',101),
  ('booleano -> TRUE','booleano',1,'p_booleano','sintactico.py',104),
  ('booleano -> FALSE','booleano',1,'p_booleano','sintactico.py',105),
  ('tipoDato -> STRING','tipoDato',1,'p_tipo_dato','sintactico.py',108),
  ('tipoDato -> INT','tipoDato',1,'p_tipo_dato','sintactico.py',109),
  ('tipoDato -> BOOL','tipoDato',1,'p_tipo_dato','sintactico.py',110),
  ('tipoDato -> DOUBLE','tipoDato',1,'p_tipo_dato','sintactico.py',111),
  ('tipoDato -> DYNAMIC','tipoDato',1,'p_tipo_dato','sintactico.py',112),
  ('tipoDato -> VAR','tipoDato',1,'p_tipo_dato','sintactico.py',113),
  ('estructuras -> estructuraIf','estructuras',1,'p_estructuras','sintactico.py',119),
  ('estructuras -> estructuraWhile','estructuras',1,'p_estructuras','sintactico.py',120),
  ('estructuras -> estructuraFor','estructuras',1,'p_estructuras','sintactico.py',121),
  ('estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA','estructuraIf',7,'p_estructuraIf','sintactico.py',124),
  ('estructuraIf -> IF LPAREN argumentoEstructura RPAREN LLAVEABRE estructuraIf LLAVECIERRA','estructuraIf',7,'p_estructuraIf','sintactico.py',125),
  ('estructuraIf -> estructuraIfElse','estructuraIf',1,'p_estructuraIf','sintactico.py',126),
  ('estructuraIfElse -> estructuraIf ELSE LLAVEABRE bloque LLAVECIERRA','estructuraIfElse',5,'p_estructuraIfElse','sintactico.py',130),
  ('estructuraIfElse -> estructuraIf ELSE LLAVEABRE estructuraIf LLAVECIERRA','estructuraIfElse',5,'p_estructuraIfElse','sintactico.py',131),
  ('estructuraWhile -> WHILE LPAREN argumentoEstructura RPAREN LLAVEABRE bloque LLAVECIERRA','estructuraWhile',7,'p_estructuraWhile','sintactico.py',135),
  ('estructuraFor -> FOR LPAREN asignacionVacio PUNTOCOMA comparacionVacio PUNTOCOMA aumento RPAREN LLAVEABRE bloque LLAVECIERRA','estructuraFor',11,'p_estructuraFor','sintactico.py',140),
  ('asignacionVacio -> asignacion','asignacionVacio',1,'p_asignacionVacio','sintactico.py',143),
  ('asignacionVacio -> empty','asignacionVacio',1,'p_asignacionVacio','sintactico.py',144),
  ('comparacionVacio -> comparacion','comparacionVacio',1,'p_comparacionVacio','sintactico.py',147),
  ('comparacionVacio -> booleano','comparacionVacio',1,'p_comparacionVacio','sintactico.py',148),
  ('comparacionVacio -> empty','comparacionVacio',1,'p_comparacionVacio','sintactico.py',149),
  ('aumento -> VARIABLE IGUAL operacion_aritmetica','aumento',3,'p_aumento','sintactico.py',153),
  ('aumento -> VARIABLE operadores_asignacion NUMERO','aumento',3,'p_aumento','sintactico.py',154),
  ('aumento -> VARIABLE operadores_asignacion VARIABLE','aumento',3,'p_aumento','sintactico.py',155),
  ('aumento -> empty','aumento',1,'p_aumento','sintactico.py',156),
  ('argumentoEstructura -> VARIABLE','argumentoEstructura',1,'p_argumentoEstructura','sintactico.py',159),
  ('argumentoEstructura -> booleano','argumentoEstructura',1,'p_argumentoEstructura','sintactico.py',160),
  ('argumentoEstructura -> comparacion','argumentoEstructura',1,'p_argumentoEstructura','sintactico.py',161),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',165),
]
